{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":17777,"databundleVersionId":869809,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Expert-Level Disaster Tweet Classification with Gradient Boosting Algorithms","metadata":{}},{"cell_type":"markdown","source":"# 1. Data Overview\n\n## 1.1. Meta Data\n\n- **id**: A unique identifier for each tweet.\n- **text**: The content of the tweet.\n- **location**: The location from which the tweet was sent (this field may be blank).\n- **keyword**: A specific keyword found in the tweet (this field may be blank).\n- **target**: Present only in train.csv, this attribute indicates whether a tweet is about a real disaster (1) or not (0).","metadata":{}},{"cell_type":"markdown","source":"# 1.2. What am I predicting?\n\nYou are predicting whether a given tweet is about a real disaster or not. \n- Predict 1 if the tweet is about a real disaster.\n- Predict 0 if the tweet is not about a real disaster.","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"# 1.3. Importing Libararies","metadata":{}},{"cell_type":"code","source":"# Standard library imports\nimport re\nimport string\nfrom tqdm import tqdm\n\n# Data manipulation and visualization libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Text processing and NLP libraries\nimport emoji\nimport nltk\nimport spacy\nfrom nltk.corpus import stopwords\nfrom gensim.models import Word2Vec\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n\n# Machine learning models and utilities\nfrom sklearn.linear_model import SGDClassifier, LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier, VotingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.pipeline import Pipeline, make_pipeline, FeatureUnion\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import FunctionTransformer, MinMaxScaler, LabelEncoder, OrdinalEncoder, StandardScaler\n\n# Evaluation metrics\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, classification_report","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.565054Z","iopub.execute_input":"2024-06-22T07:08:06.565438Z","iopub.status.idle":"2024-06-22T07:08:06.573815Z","shell.execute_reply.started":"2024-06-22T07:08:06.565409Z","shell.execute_reply":"2024-06-22T07:08:06.572512Z"},"trusted":true},"execution_count":68,"outputs":[]},{"cell_type":"markdown","source":"# 1.4. Reading data and header view","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/nlp-getting-started/train.csv')\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.575821Z","iopub.execute_input":"2024-06-22T07:08:06.576267Z","iopub.status.idle":"2024-06-22T07:08:06.619002Z","shell.execute_reply.started":"2024-06-22T07:08:06.576229Z","shell.execute_reply":"2024-06-22T07:08:06.617942Z"},"trusted":true},"execution_count":69,"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# 1.5. Shape of Data","metadata":{}},{"cell_type":"code","source":"# # Print number of rows and columns in the dataset\nprint(\"Number of rows:\", df.shape[0])\nprint(\"Number of columns:\", df.shape[1])","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.621229Z","iopub.execute_input":"2024-06-22T07:08:06.622262Z","iopub.status.idle":"2024-06-22T07:08:06.628048Z","shell.execute_reply.started":"2024-06-22T07:08:06.622220Z","shell.execute_reply":"2024-06-22T07:08:06.627041Z"},"trusted":true},"execution_count":70,"outputs":[{"name":"stdout","text":"Number of rows: 7613\nNumber of columns: 5\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# 1.6. Description of Data","metadata":{}},{"cell_type":"code","source":"df.describe(include='all').round(2).style.format(precision=2)\\\n    .set_properties(**{'font-size': '11pt', 'font-family': 'Arial'})\\\n    .background_gradient(cmap='Reds', subset=pd.IndexSlice[:, df.select_dtypes(include=['float64', 'int64']).columns])","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.629487Z","iopub.execute_input":"2024-06-22T07:08:06.629939Z","iopub.status.idle":"2024-06-22T07:08:06.675396Z","shell.execute_reply.started":"2024-06-22T07:08:06.629901Z","shell.execute_reply":"2024-06-22T07:08:06.674206Z"},"trusted":true},"execution_count":71,"outputs":[{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"<pandas.io.formats.style.Styler at 0x7fcf49a64c70>","text/html":"<style type=\"text/css\">\n#T_bd178_row0_col0 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #d92523;\n  color: #f1f1f1;\n}\n#T_bd178_row0_col1, #T_bd178_row0_col2, #T_bd178_row0_col3, #T_bd178_row1_col1, #T_bd178_row1_col2, #T_bd178_row1_col3, #T_bd178_row2_col1, #T_bd178_row2_col2, #T_bd178_row2_col3, #T_bd178_row3_col1, #T_bd178_row3_col2, #T_bd178_row3_col3, #T_bd178_row4_col1, #T_bd178_row4_col2, #T_bd178_row4_col3, #T_bd178_row5_col1, #T_bd178_row5_col2, #T_bd178_row5_col3, #T_bd178_row6_col1, #T_bd178_row6_col2, #T_bd178_row6_col3, #T_bd178_row7_col1, #T_bd178_row7_col2, #T_bd178_row7_col3, #T_bd178_row8_col1, #T_bd178_row8_col2, #T_bd178_row8_col3, #T_bd178_row9_col1, #T_bd178_row9_col2, #T_bd178_row9_col3, #T_bd178_row10_col1, #T_bd178_row10_col2, #T_bd178_row10_col3 {\n  font-size: 11pt;\n  font-family: Arial;\n}\n#T_bd178_row0_col4, #T_bd178_row10_col0 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #67000d;\n  color: #f1f1f1;\n}\n#T_bd178_row1_col0, #T_bd178_row1_col4, #T_bd178_row2_col0, #T_bd178_row2_col4, #T_bd178_row3_col0, #T_bd178_row3_col4 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #000000;\n  color: #f1f1f1;\n}\n#T_bd178_row4_col0 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #fb694a;\n  color: #f1f1f1;\n}\n#T_bd178_row4_col4, #T_bd178_row5_col4, #T_bd178_row6_col0, #T_bd178_row6_col4, #T_bd178_row7_col4, #T_bd178_row8_col4, #T_bd178_row9_col4, #T_bd178_row10_col4 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #fff5f0;\n  color: #000000;\n}\n#T_bd178_row5_col0 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #fcaf93;\n  color: #000000;\n}\n#T_bd178_row7_col0 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #fcbba1;\n  color: #000000;\n}\n#T_bd178_row8_col0 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #fb6b4b;\n  color: #f1f1f1;\n}\n#T_bd178_row9_col0 {\n  font-size: 11pt;\n  font-family: Arial;\n  background-color: #cb181d;\n  color: #f1f1f1;\n}\n</style>\n<table id=\"T_bd178\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_bd178_level0_col0\" class=\"col_heading level0 col0\" >id</th>\n      <th id=\"T_bd178_level0_col1\" class=\"col_heading level0 col1\" >keyword</th>\n      <th id=\"T_bd178_level0_col2\" class=\"col_heading level0 col2\" >location</th>\n      <th id=\"T_bd178_level0_col3\" class=\"col_heading level0 col3\" >text</th>\n      <th id=\"T_bd178_level0_col4\" class=\"col_heading level0 col4\" >target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_bd178_level0_row0\" class=\"row_heading level0 row0\" >count</th>\n      <td id=\"T_bd178_row0_col0\" class=\"data row0 col0\" >7613.00</td>\n      <td id=\"T_bd178_row0_col1\" class=\"data row0 col1\" >7552</td>\n      <td id=\"T_bd178_row0_col2\" class=\"data row0 col2\" >5080</td>\n      <td id=\"T_bd178_row0_col3\" class=\"data row0 col3\" >7613</td>\n      <td id=\"T_bd178_row0_col4\" class=\"data row0 col4\" >7613.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row1\" class=\"row_heading level0 row1\" >unique</th>\n      <td id=\"T_bd178_row1_col0\" class=\"data row1 col0\" >nan</td>\n      <td id=\"T_bd178_row1_col1\" class=\"data row1 col1\" >221</td>\n      <td id=\"T_bd178_row1_col2\" class=\"data row1 col2\" >3341</td>\n      <td id=\"T_bd178_row1_col3\" class=\"data row1 col3\" >7503</td>\n      <td id=\"T_bd178_row1_col4\" class=\"data row1 col4\" >nan</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row2\" class=\"row_heading level0 row2\" >top</th>\n      <td id=\"T_bd178_row2_col0\" class=\"data row2 col0\" >nan</td>\n      <td id=\"T_bd178_row2_col1\" class=\"data row2 col1\" >fatalities</td>\n      <td id=\"T_bd178_row2_col2\" class=\"data row2 col2\" >USA</td>\n      <td id=\"T_bd178_row2_col3\" class=\"data row2 col3\" >11-Year-Old Boy Charged With Manslaughter of Toddler: Report: An 11-year-old boy has been charged with manslaughter over the fatal sh...</td>\n      <td id=\"T_bd178_row2_col4\" class=\"data row2 col4\" >nan</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row3\" class=\"row_heading level0 row3\" >freq</th>\n      <td id=\"T_bd178_row3_col0\" class=\"data row3 col0\" >nan</td>\n      <td id=\"T_bd178_row3_col1\" class=\"data row3 col1\" >45</td>\n      <td id=\"T_bd178_row3_col2\" class=\"data row3 col2\" >104</td>\n      <td id=\"T_bd178_row3_col3\" class=\"data row3 col3\" >10</td>\n      <td id=\"T_bd178_row3_col4\" class=\"data row3 col4\" >nan</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row4\" class=\"row_heading level0 row4\" >mean</th>\n      <td id=\"T_bd178_row4_col0\" class=\"data row4 col0\" >5441.93</td>\n      <td id=\"T_bd178_row4_col1\" class=\"data row4 col1\" >nan</td>\n      <td id=\"T_bd178_row4_col2\" class=\"data row4 col2\" >nan</td>\n      <td id=\"T_bd178_row4_col3\" class=\"data row4 col3\" >nan</td>\n      <td id=\"T_bd178_row4_col4\" class=\"data row4 col4\" >0.43</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row5\" class=\"row_heading level0 row5\" >std</th>\n      <td id=\"T_bd178_row5_col0\" class=\"data row5 col0\" >3137.12</td>\n      <td id=\"T_bd178_row5_col1\" class=\"data row5 col1\" >nan</td>\n      <td id=\"T_bd178_row5_col2\" class=\"data row5 col2\" >nan</td>\n      <td id=\"T_bd178_row5_col3\" class=\"data row5 col3\" >nan</td>\n      <td id=\"T_bd178_row5_col4\" class=\"data row5 col4\" >0.50</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row6\" class=\"row_heading level0 row6\" >min</th>\n      <td id=\"T_bd178_row6_col0\" class=\"data row6 col0\" >1.00</td>\n      <td id=\"T_bd178_row6_col1\" class=\"data row6 col1\" >nan</td>\n      <td id=\"T_bd178_row6_col2\" class=\"data row6 col2\" >nan</td>\n      <td id=\"T_bd178_row6_col3\" class=\"data row6 col3\" >nan</td>\n      <td id=\"T_bd178_row6_col4\" class=\"data row6 col4\" >0.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row7\" class=\"row_heading level0 row7\" >25%</th>\n      <td id=\"T_bd178_row7_col0\" class=\"data row7 col0\" >2734.00</td>\n      <td id=\"T_bd178_row7_col1\" class=\"data row7 col1\" >nan</td>\n      <td id=\"T_bd178_row7_col2\" class=\"data row7 col2\" >nan</td>\n      <td id=\"T_bd178_row7_col3\" class=\"data row7 col3\" >nan</td>\n      <td id=\"T_bd178_row7_col4\" class=\"data row7 col4\" >0.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row8\" class=\"row_heading level0 row8\" >50%</th>\n      <td id=\"T_bd178_row8_col0\" class=\"data row8 col0\" >5408.00</td>\n      <td id=\"T_bd178_row8_col1\" class=\"data row8 col1\" >nan</td>\n      <td id=\"T_bd178_row8_col2\" class=\"data row8 col2\" >nan</td>\n      <td id=\"T_bd178_row8_col3\" class=\"data row8 col3\" >nan</td>\n      <td id=\"T_bd178_row8_col4\" class=\"data row8 col4\" >0.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row9\" class=\"row_heading level0 row9\" >75%</th>\n      <td id=\"T_bd178_row9_col0\" class=\"data row9 col0\" >8146.00</td>\n      <td id=\"T_bd178_row9_col1\" class=\"data row9 col1\" >nan</td>\n      <td id=\"T_bd178_row9_col2\" class=\"data row9 col2\" >nan</td>\n      <td id=\"T_bd178_row9_col3\" class=\"data row9 col3\" >nan</td>\n      <td id=\"T_bd178_row9_col4\" class=\"data row9 col4\" >1.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_bd178_level0_row10\" class=\"row_heading level0 row10\" >max</th>\n      <td id=\"T_bd178_row10_col0\" class=\"data row10 col0\" >10873.00</td>\n      <td id=\"T_bd178_row10_col1\" class=\"data row10 col1\" >nan</td>\n      <td id=\"T_bd178_row10_col2\" class=\"data row10 col2\" >nan</td>\n      <td id=\"T_bd178_row10_col3\" class=\"data row10 col3\" >nan</td>\n      <td id=\"T_bd178_row10_col4\" class=\"data row10 col4\" >1.00</td>\n    </tr>\n  </tbody>\n</table>\n"},"metadata":{}}]},{"cell_type":"markdown","source":"# 1.7. Info about data","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.678109Z","iopub.execute_input":"2024-06-22T07:08:06.678539Z","iopub.status.idle":"2024-06-22T07:08:06.691036Z","shell.execute_reply.started":"2024-06-22T07:08:06.678501Z","shell.execute_reply":"2024-06-22T07:08:06.689917Z"},"trusted":true},"execution_count":72,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7613 entries, 0 to 7612\nData columns (total 5 columns):\n #   Column    Non-Null Count  Dtype \n---  ------    --------------  ----- \n 0   id        7613 non-null   int64 \n 1   keyword   7552 non-null   object\n 2   location  5080 non-null   object\n 3   text      7613 non-null   object\n 4   target    7613 non-null   int64 \ndtypes: int64(2), object(3)\nmemory usage: 297.5+ KB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# 1.8. Null values in Data","metadata":{}},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.692292Z","iopub.execute_input":"2024-06-22T07:08:06.692605Z","iopub.status.idle":"2024-06-22T07:08:06.706386Z","shell.execute_reply.started":"2024-06-22T07:08:06.692580Z","shell.execute_reply":"2024-06-22T07:08:06.705397Z"},"trusted":true},"execution_count":73,"outputs":[{"execution_count":73,"output_type":"execute_result","data":{"text/plain":"id             0\nkeyword       61\nlocation    2533\ntext           0\ntarget         0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"# 1.9. Value Counts of Location","metadata":{}},{"cell_type":"code","source":"df['location'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.707806Z","iopub.execute_input":"2024-06-22T07:08:06.708198Z","iopub.status.idle":"2024-06-22T07:08:06.722072Z","shell.execute_reply.started":"2024-06-22T07:08:06.708150Z","shell.execute_reply":"2024-06-22T07:08:06.720750Z"},"trusted":true},"execution_count":74,"outputs":[{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"location\nUSA                    104\nNew York                71\nUnited States           50\nLondon                  45\nCanada                  29\n                      ... \nMontrÌ©al, QuÌ©bec       1\nMontreal                 1\nÌÏT: 6.4682,3.18287      1\nLive4Heed??              1\nLincoln                  1\nName: count, Length: 3341, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# 1.10. Value Counts of Keyword","metadata":{}},{"cell_type":"code","source":"df['keyword'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.723456Z","iopub.execute_input":"2024-06-22T07:08:06.724123Z","iopub.status.idle":"2024-06-22T07:08:06.736147Z","shell.execute_reply.started":"2024-06-22T07:08:06.724094Z","shell.execute_reply":"2024-06-22T07:08:06.734950Z"},"trusted":true},"execution_count":75,"outputs":[{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"keyword\nfatalities               45\ndeluge                   42\narmageddon               42\nsinking                  41\ndamage                   41\n                         ..\nforest%20fire            19\nepicentre                12\nthreat                   11\ninundation               10\nradiation%20emergency     9\nName: count, Length: 221, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# 1.11. Checking Duplicates","metadata":{}},{"cell_type":"code","source":"df.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.737622Z","iopub.execute_input":"2024-06-22T07:08:06.737998Z","iopub.status.idle":"2024-06-22T07:08:06.756196Z","shell.execute_reply.started":"2024-06-22T07:08:06.737972Z","shell.execute_reply":"2024-06-22T07:08:06.754921Z"},"trusted":true},"execution_count":76,"outputs":[{"execution_count":76,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"markdown","source":"# 1.12. Checking Data Types","metadata":{}},{"cell_type":"code","source":"df.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.805790Z","iopub.execute_input":"2024-06-22T07:08:06.806720Z","iopub.status.idle":"2024-06-22T07:08:06.814142Z","shell.execute_reply.started":"2024-06-22T07:08:06.806686Z","shell.execute_reply":"2024-06-22T07:08:06.813062Z"},"trusted":true},"execution_count":77,"outputs":[{"execution_count":77,"output_type":"execute_result","data":{"text/plain":"id           int64\nkeyword     object\nlocation    object\ntext        object\ntarget       int64\ndtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"# 2. Exploratory Data Analysis","metadata":{}},{"cell_type":"markdown","source":"# 2.1. Histogram of Numerical Columns","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\n\nplt.hist(df['target'], bins=20, alpha=0.7, color='green', edgecolor='black', linewidth=1.2)\n\n# Customize labels and title\nplt.xlabel('Target Value')\nplt.ylabel('Frequency')\nplt.title('Histogram of Target Values')\n\n# Show plot\nplt.grid(True)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:06.816467Z","iopub.execute_input":"2024-06-22T07:08:06.816924Z","iopub.status.idle":"2024-06-22T07:08:07.103239Z","shell.execute_reply.started":"2024-06-22T07:08:06.816888Z","shell.execute_reply":"2024-06-22T07:08:07.101714Z"},"trusted":true},"execution_count":78,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"plt.figure(figsize=(15, 5))\n\n\nsns.boxenplot(data=df, orient='h', palette=['green'], linewidth=1.2)\n\n\nplt.title('Box Plots of Numerical Columns', fontsize=20, fontweight='bold', color='#1A5276', pad=20)\nplt.xlabel('Values', fontsize=15, fontweight='bold', color='#2E4053')\nplt.ylabel('Columns', fontsize=15, fontweight='bold', color='#2E4053')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.104652Z","iopub.execute_input":"2024-06-22T07:08:07.105040Z","iopub.status.idle":"2024-06-22T07:08:07.308689Z","shell.execute_reply.started":"2024-06-22T07:08:07.105009Z","shell.execute_reply":"2024-06-22T07:08:07.307699Z"},"trusted":true},"execution_count":79,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:1794: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:1794: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x500 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":" # 2.3. Heatmap for MCAR(Missing Completely At Random)","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(10,6))\nsns.heatmap(df.isnull())\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.310498Z","iopub.execute_input":"2024-06-22T07:08:07.310954Z","iopub.status.idle":"2024-06-22T07:08:07.776509Z","shell.execute_reply.started":"2024-06-22T07:08:07.310918Z","shell.execute_reply":"2024-06-22T07:08:07.775385Z"},"trusted":true},"execution_count":80,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# 3. Feature Engineering","metadata":{}},{"cell_type":"markdown","source":"# 3.1. Imputing Null Values","metadata":{}},{"cell_type":"code","source":"df['keyword'] = df['keyword'].fillna(df['keyword'].mode()[0])\ndf['location'] = df['location'].fillna(value='Missing')","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.780022Z","iopub.execute_input":"2024-06-22T07:08:07.780353Z","iopub.status.idle":"2024-06-22T07:08:07.789602Z","shell.execute_reply.started":"2024-06-22T07:08:07.780325Z","shell.execute_reply":"2024-06-22T07:08:07.788543Z"},"trusted":true},"execution_count":81,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.791204Z","iopub.execute_input":"2024-06-22T07:08:07.791538Z","iopub.status.idle":"2024-06-22T07:08:07.807984Z","shell.execute_reply.started":"2024-06-22T07:08:07.791511Z","shell.execute_reply":"2024-06-22T07:08:07.806940Z"},"trusted":true},"execution_count":82,"outputs":[{"execution_count":82,"output_type":"execute_result","data":{"text/plain":"id          0\nkeyword     0\nlocation    0\ntext        0\ntarget      0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# 3.2. Dropping \"id\" irrelevant feature","metadata":{}},{"cell_type":"code","source":"df.drop(columns=['id'], inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.809314Z","iopub.execute_input":"2024-06-22T07:08:07.809660Z","iopub.status.idle":"2024-06-22T07:08:07.820922Z","shell.execute_reply.started":"2024-06-22T07:08:07.809633Z","shell.execute_reply":"2024-06-22T07:08:07.819930Z"},"trusted":true},"execution_count":83,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.822344Z","iopub.execute_input":"2024-06-22T07:08:07.824202Z","iopub.status.idle":"2024-06-22T07:08:07.841728Z","shell.execute_reply.started":"2024-06-22T07:08:07.824167Z","shell.execute_reply":"2024-06-22T07:08:07.840620Z"},"trusted":true},"execution_count":84,"outputs":[{"execution_count":84,"output_type":"execute_result","data":{"text/plain":"      keyword location                                               text  \\\n0  fatalities  Missing  Our Deeds are the Reason of this #earthquake M...   \n1  fatalities  Missing             Forest fire near La Ronge Sask. Canada   \n2  fatalities  Missing  All residents asked to 'shelter in place' are ...   \n3  fatalities  Missing  13,000 people receive #wildfires evacuation or...   \n4  fatalities  Missing  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>fatalities</td>\n      <td>Missing</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>fatalities</td>\n      <td>Missing</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>fatalities</td>\n      <td>Missing</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>fatalities</td>\n      <td>Missing</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>fatalities</td>\n      <td>Missing</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# 3.3. Encoding \"Keyword\" and \"Location\" columns","metadata":{}},{"cell_type":"code","source":"le = LabelEncoder()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.843048Z","iopub.execute_input":"2024-06-22T07:08:07.843384Z","iopub.status.idle":"2024-06-22T07:08:07.851629Z","shell.execute_reply.started":"2024-06-22T07:08:07.843357Z","shell.execute_reply":"2024-06-22T07:08:07.850762Z"},"trusted":true},"execution_count":85,"outputs":[]},{"cell_type":"code","source":"df['keyword'] = le.fit_transform(df['keyword'])\ndf['location']= le.fit_transform(df['location'])","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.852789Z","iopub.execute_input":"2024-06-22T07:08:07.853445Z","iopub.status.idle":"2024-06-22T07:08:07.874548Z","shell.execute_reply.started":"2024-06-22T07:08:07.853418Z","shell.execute_reply":"2024-06-22T07:08:07.873361Z"},"trusted":true},"execution_count":86,"outputs":[]},{"cell_type":"code","source":"df.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.876045Z","iopub.execute_input":"2024-06-22T07:08:07.876678Z","iopub.status.idle":"2024-06-22T07:08:07.892890Z","shell.execute_reply.started":"2024-06-22T07:08:07.876648Z","shell.execute_reply":"2024-06-22T07:08:07.891627Z"},"trusted":true},"execution_count":87,"outputs":[{"execution_count":87,"output_type":"execute_result","data":{"text/plain":"   keyword  location                                               text  \\\n0      104      1690  Our Deeds are the Reason of this #earthquake M...   \n1      104      1690             Forest fire near La Ronge Sask. Canada   \n2      104      1690  All residents asked to 'shelter in place' are ...   \n3      104      1690  13,000 people receive #wildfires evacuation or...   \n4      104      1690  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>104</td>\n      <td>1690</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>104</td>\n      <td>1690</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>104</td>\n      <td>1690</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>104</td>\n      <td>1690</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>104</td>\n      <td>1690</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# 4. NLP on text column","metadata":{}},{"cell_type":"markdown","source":"### **4.1. Lowercasing**","metadata":{}},{"cell_type":"code","source":"df['text'] = df['text'].str.lower()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.894456Z","iopub.execute_input":"2024-06-22T07:08:07.894872Z","iopub.status.idle":"2024-06-22T07:08:07.906025Z","shell.execute_reply.started":"2024-06-22T07:08:07.894822Z","shell.execute_reply":"2024-06-22T07:08:07.904832Z"},"trusted":true},"execution_count":88,"outputs":[]},{"cell_type":"code","source":"pd.DataFrame(df['text'].head())","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.907603Z","iopub.execute_input":"2024-06-22T07:08:07.908040Z","iopub.status.idle":"2024-06-22T07:08:07.923487Z","shell.execute_reply.started":"2024-06-22T07:08:07.908000Z","shell.execute_reply":"2024-06-22T07:08:07.922441Z"},"trusted":true},"execution_count":89,"outputs":[{"execution_count":89,"output_type":"execute_result","data":{"text/plain":"                                                text\n0  our deeds are the reason of this #earthquake m...\n1             forest fire near la ronge sask. canada\n2  all residents asked to 'shelter in place' are ...\n3  13,000 people receive #wildfires evacuation or...\n4  just got sent this photo from ruby #alaska as ...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>our deeds are the reason of this #earthquake m...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>forest fire near la ronge sask. canada</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>all residents asked to 'shelter in place' are ...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>just got sent this photo from ruby #alaska as ...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### **4.2. Removing html tags**","metadata":{}},{"cell_type":"code","source":"def remove_html_tags(text):\n    clean_text = re.sub('<.*?>', '', text)\n    return clean_text","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.927415Z","iopub.execute_input":"2024-06-22T07:08:07.927773Z","iopub.status.idle":"2024-06-22T07:08:07.934385Z","shell.execute_reply.started":"2024-06-22T07:08:07.927746Z","shell.execute_reply":"2024-06-22T07:08:07.933161Z"},"trusted":true},"execution_count":90,"outputs":[]},{"cell_type":"code","source":"df['text'] =df['text'].apply(remove_html_tags)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.935801Z","iopub.execute_input":"2024-06-22T07:08:07.936254Z","iopub.status.idle":"2024-06-22T07:08:07.958194Z","shell.execute_reply.started":"2024-06-22T07:08:07.936217Z","shell.execute_reply":"2024-06-22T07:08:07.956798Z"},"trusted":true},"execution_count":91,"outputs":[]},{"cell_type":"code","source":"pd.DataFrame(df['text'].head(5))","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.959591Z","iopub.execute_input":"2024-06-22T07:08:07.960152Z","iopub.status.idle":"2024-06-22T07:08:07.975657Z","shell.execute_reply.started":"2024-06-22T07:08:07.960114Z","shell.execute_reply":"2024-06-22T07:08:07.974190Z"},"trusted":true},"execution_count":92,"outputs":[{"execution_count":92,"output_type":"execute_result","data":{"text/plain":"                                                text\n0  our deeds are the reason of this #earthquake m...\n1             forest fire near la ronge sask. canada\n2  all residents asked to 'shelter in place' are ...\n3  13,000 people receive #wildfires evacuation or...\n4  just got sent this photo from ruby #alaska as ...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>our deeds are the reason of this #earthquake m...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>forest fire near la ronge sask. canada</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>all residents asked to 'shelter in place' are ...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>just got sent this photo from ruby #alaska as ...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### **4.3. Removing URL's**","metadata":{}},{"cell_type":"code","source":"def remove_urls(text):\n    url_pattern = re.compile(r'https?://\\S+|www\\.\\S+')\n    clean_text = re.sub(url_pattern, '', text)\n    return clean_text","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.976651Z","iopub.execute_input":"2024-06-22T07:08:07.976986Z","iopub.status.idle":"2024-06-22T07:08:07.986929Z","shell.execute_reply.started":"2024-06-22T07:08:07.976960Z","shell.execute_reply":"2024-06-22T07:08:07.985785Z"},"trusted":true},"execution_count":93,"outputs":[]},{"cell_type":"code","source":"df['text'] = df['text'].apply(remove_urls)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:07.988340Z","iopub.execute_input":"2024-06-22T07:08:07.988673Z","iopub.status.idle":"2024-06-22T07:08:08.026244Z","shell.execute_reply.started":"2024-06-22T07:08:07.988639Z","shell.execute_reply":"2024-06-22T07:08:08.025203Z"},"trusted":true},"execution_count":94,"outputs":[]},{"cell_type":"code","source":"pd.DataFrame(df['text'].head(5))","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:08.027759Z","iopub.execute_input":"2024-06-22T07:08:08.028174Z","iopub.status.idle":"2024-06-22T07:08:08.039158Z","shell.execute_reply.started":"2024-06-22T07:08:08.028139Z","shell.execute_reply":"2024-06-22T07:08:08.037935Z"},"trusted":true},"execution_count":95,"outputs":[{"execution_count":95,"output_type":"execute_result","data":{"text/plain":"                                                text\n0  our deeds are the reason of this #earthquake m...\n1             forest fire near la ronge sask. canada\n2  all residents asked to 'shelter in place' are ...\n3  13,000 people receive #wildfires evacuation or...\n4  just got sent this photo from ruby #alaska as ...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>our deeds are the reason of this #earthquake m...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>forest fire near la ronge sask. canada</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>all residents asked to 'shelter in place' are ...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>just got sent this photo from ruby #alaska as ...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### **4.4. Removing Punctuations**","metadata":{}},{"cell_type":"code","source":"def remove_punctuation(text):\n    punctuation = string.punctuation\n    clean_text = text.translate(str.maketrans('','',punctuation))\n    return clean_text","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:08.040659Z","iopub.execute_input":"2024-06-22T07:08:08.041097Z","iopub.status.idle":"2024-06-22T07:08:08.050341Z","shell.execute_reply.started":"2024-06-22T07:08:08.041061Z","shell.execute_reply":"2024-06-22T07:08:08.049226Z"},"trusted":true},"execution_count":96,"outputs":[]},{"cell_type":"code","source":"df['text']= df['text'].apply(remove_punctuation)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:08.051910Z","iopub.execute_input":"2024-06-22T07:08:08.052451Z","iopub.status.idle":"2024-06-22T07:08:08.105214Z","shell.execute_reply.started":"2024-06-22T07:08:08.052415Z","shell.execute_reply":"2024-06-22T07:08:08.103973Z"},"trusted":true},"execution_count":97,"outputs":[]},{"cell_type":"code","source":"pd.DataFrame(df['text'].head(5))","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:08:08.106734Z","iopub.execute_input":"2024-06-22T07:08:08.107118Z","iopub.status.idle":"2024-06-22T07:08:08.117398Z","shell.execute_reply.started":"2024-06-22T07:08:08.107090Z","shell.execute_reply":"2024-06-22T07:08:08.116288Z"},"trusted":true},"execution_count":98,"outputs":[{"execution_count":98,"output_type":"execute_result","data":{"text/plain":"                                                text\n0  our deeds are the reason of this earthquake ma...\n1              forest fire near la ronge sask canada\n2  all residents asked to shelter in place are be...\n3  13000 people receive wildfires evacuation orde...\n4  just got sent this photo from ruby alaska as s...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>our deeds are the reason of this earthquake ma...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>forest fire near la ronge sask canada</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>all residents asked to shelter in place are be...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13000 people receive wildfires evacuation orde...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>just got sent this photo from ruby alaska as s...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### **4.5. Chat Word Treatment**","metadata":{}},{"cell_type":"code","source":"chat_words_mapping = {\n    \"lol\": \"laughing out loud\",\n    \"brb\": \"be right back\",\n    \"btw\": \"by the way\",\n    \"afk\": \"away from keyboard\",\n    \"rofl\": \"rolling on the floor laughing\",\n    \"ttyl\": \"talk to you later\",\n    \"np\": \"no problem\",\n    \"thx\": \"thanks\",\n    \"omg\": \"oh my god\",\n    \"idk\": \"I don't know\",\n    \"np\": \"no problem\",\n    \"gg\": \"good game\",\n    \"g2g\": \"got to go\",\n    \"b4\": \"before\",\n    \"cu\": \"see you\",\n    \"yw\": \"you're welcome\",\n    \"wtf\": \"what the f*ck\",\n    \"imho\": \"in my humble opinion\",\n    \"jk\": \"just kidding\",\n    \"gf\": \"girlfriend\",\n    \"bf\": \"boyfriend\",\n    \"u\": \"you\",\n    \"r\": \"are\",\n    \"2\": \"to\",\n    \"4\": \"for\",\n    \"b\": \"be\",\n    \"c\": \"see\",\n    \"y\": \"why\",\n    \"tho\": \"though\",\n    \"smh\": \"shaking my head\",\n    \"lolz\": \"laughing out loud\",\n    \"h8\": \"hate\",\n    \"luv\": \"love\",\n    \"pls\": \"please\",\n    \"sry\": \"sorry\",\n    \"tbh\": \"to be honest\",\n    \"omw\": \"on my way\",\n    \"omw2syg\": \"on my way to see your girlfriend\",\n}\n\ndef expand_chat_words(text):\n    words = text.split()\n    expanded_words =[chat_words_mapping.get(word.lower(),word) for word in words]\n    return ' '.join(expanded_words)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:09:00.916310Z","iopub.execute_input":"2024-06-22T07:09:00.916761Z","iopub.status.idle":"2024-06-22T07:09:00.925865Z","shell.execute_reply.started":"2024-06-22T07:09:00.916727Z","shell.execute_reply":"2024-06-22T07:09:00.924594Z"},"trusted":true},"execution_count":101,"outputs":[]},{"cell_type":"code","source":"df['text'] = df['text'].apply(expand_chat_words)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:09:03.653405Z","iopub.execute_input":"2024-06-22T07:09:03.653799Z","iopub.status.idle":"2024-06-22T07:09:03.704011Z","shell.execute_reply.started":"2024-06-22T07:09:03.653768Z","shell.execute_reply":"2024-06-22T07:09:03.702825Z"},"trusted":true},"execution_count":102,"outputs":[]},{"cell_type":"code","source":"pd.DataFrame(df['text'].head(5))","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:09:40.652486Z","iopub.execute_input":"2024-06-22T07:09:40.653340Z","iopub.status.idle":"2024-06-22T07:09:40.663334Z","shell.execute_reply.started":"2024-06-22T07:09:40.653306Z","shell.execute_reply":"2024-06-22T07:09:40.662070Z"},"trusted":true},"execution_count":103,"outputs":[{"execution_count":103,"output_type":"execute_result","data":{"text/plain":"                                                text\n0  our deeds are the reason of this earthquake ma...\n1              forest fire near la ronge sask canada\n2  all residents asked to shelter in place are be...\n3  13000 people receive wildfires evacuation orde...\n4  just got sent this photo from ruby alaska as s...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>our deeds are the reason of this earthquake ma...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>forest fire near la ronge sask canada</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>all residents asked to shelter in place are be...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13000 people receive wildfires evacuation orde...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>just got sent this photo from ruby alaska as s...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### **4.6. Removing Stop Words**","metadata":{}},{"cell_type":"code","source":"def remove_stop_words(text):\n    tokens = nltk.word_tokenize(text)\n    stop_words = set(stopwords.words('english'))\n    filtered_tokens = [token for token in tokens if token not in stop_words]\n    preprocessed_text = ' '.join(filtered_tokens)\n    return preprocessed_text","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:15:48.177987Z","iopub.execute_input":"2024-06-22T07:15:48.178373Z","iopub.status.idle":"2024-06-22T07:15:48.184155Z","shell.execute_reply.started":"2024-06-22T07:15:48.178343Z","shell.execute_reply":"2024-06-22T07:15:48.183005Z"},"trusted":true},"execution_count":104,"outputs":[]},{"cell_type":"code","source":"df['text'] = df['text'].apply(remove_stop_words)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:16:20.367172Z","iopub.execute_input":"2024-06-22T07:16:20.367607Z","iopub.status.idle":"2024-06-22T07:16:22.755266Z","shell.execute_reply.started":"2024-06-22T07:16:20.367552Z","shell.execute_reply":"2024-06-22T07:16:22.754235Z"},"trusted":true},"execution_count":105,"outputs":[]},{"cell_type":"code","source":"pd.DataFrame(df['text'].head(5))","metadata":{"execution":{"iopub.status.busy":"2024-06-22T07:16:41.860257Z","iopub.execute_input":"2024-06-22T07:16:41.860728Z","iopub.status.idle":"2024-06-22T07:16:41.871550Z","shell.execute_reply.started":"2024-06-22T07:16:41.860688Z","shell.execute_reply":"2024-06-22T07:16:41.870471Z"},"trusted":true},"execution_count":106,"outputs":[{"execution_count":106,"output_type":"execute_result","data":{"text/plain":"                                                text\n0       deeds reason earthquake may allah forgive us\n1              forest fire near la ronge sask canada\n2  residents asked shelter place notified officer...\n3  13000 people receive wildfires evacuation orde...\n4  got sent photo ruby alaska smoke wildfires pou...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>deeds reason earthquake may allah forgive us</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>forest fire near la ronge sask canada</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>residents asked shelter place notified officer...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13000 people receive wildfires evacuation orde...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>got sent photo ruby alaska smoke wildfires pou...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### **4.7. Replacing emojis with meanings**","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}