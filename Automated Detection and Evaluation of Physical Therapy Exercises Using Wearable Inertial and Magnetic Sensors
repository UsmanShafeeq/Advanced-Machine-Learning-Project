{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8210603,"sourceType":"datasetVersion","datasetId":4865695}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-17T10:38:24.537330Z","iopub.execute_input":"2024-07-17T10:38:24.537727Z","iopub.status.idle":"2024-07-17T10:38:26.061451Z","shell.execute_reply.started":"2024-07-17T10:38:24.537695Z","shell.execute_reply":"2024-07-17T10:38:26.060072Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/physical-therapy-exercises-dataset/Description.pdf\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e5/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e1/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e7/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e3/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e4/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e6/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s1/e8/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e2/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e5/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e1/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e7/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e3/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e4/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e6/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s5/e8/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e2/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e5/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e1/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e7/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e3/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e4/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e6/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s2/e8/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e2/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e5/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e1/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e7/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e3/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e4/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e6/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s3/e8/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e2/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e5/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e1/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e7/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e3/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e4/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e6/u2/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/template_times.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u4/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u4/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u1/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u1/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u5/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u5/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u3/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u3/test.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u2/template_session.txt\n/kaggle/input/physical-therapy-exercises-dataset/s4/e8/u2/test.txt\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Automated Detection and Evaluation of Physical Therapy Exercises Using Wearable Motion Sensors: A Multi-Template Multi-Match Approach\n\n## Abstract\nIn this paper, we present an autonomous system designed to detect and evaluate physical therapy exercises using wearable inertial and magnetic sensors. The system utilizes the multi-template multi-match dynamic time warping (MTMM-DTW) algorithm to accurately detect and classify various types of physical therapy exercises, while also evaluating the correctness of their execution. We evaluate the system's performance using a dataset comprising multiple executions of eight types of exercises performed by five subjects, demonstrating high accuracy in exercise classification and robustness to variations in execution style and sensor noise.\n\n## 1. Introduction\n- **Background**: Discuss the importance of physical therapy exercises in rehabilitation and recovery, highlighting the challenges in monitoring and evaluating exercise correctness using traditional methods.\n- **Motivation**: Explain the need for an autonomous system that can provide objective feedback to patients and therapists based on real-time motion data from wearable sensors.\n- **Objective**: Outline the objectives of the research, focusing on the development of the MTMM-DTW algorithm for exercise detection, classification, and evaluation.\n\n## 2. Related Work\n- **Previous Studies**: Review existing literature on automated systems for monitoring physical therapy exercises using motion sensors.\n- **Techniques and Algorithms**: Discuss relevant techniques such as dynamic time warping (DTW) and variations used in similar contexts.\n- **Limitations and Gaps**: Identify gaps in current research and highlight how the proposed MTMM-DTW algorithm addresses these limitations.\n\n## 3. Methodology\n- **Dataset Description**: Provide details about the Physical Therapy Exercises Dataset, including sensor specifications, types of exercises, and execution variations.\n- **MTMM-DTW Algorithm**: Explain the multi-template multi-match dynamic time warping algorithm in detail, emphasizing its ability to handle multiple exercise types and execution styles.\n- **Data Preprocessing**: Describe any preprocessing steps applied to the raw sensor data, such as filtering and normalization.\n- **Evaluation Metrics**: Define the metrics used to evaluate the performance of the algorithm, including exercise detection accuracy, classification accuracy, and error identification rates.\n\n## 4. Experimental Results\n- **Dataset Split**: Explain how the dataset was split into training and test sets, detailing the number of exercises and executions used for training and evaluation.\n- **Performance Evaluation**: Present the results of the experiments, including accuracy rates for exercise detection, classification of exercise types, and evaluation of execution correctness.\n- **Comparison**: Compare the performance of the MTMM-DTW algorithm with baseline methods or previous studies, highlighting improvements in accuracy and robustness.\n\n## 5. Discussion\n- **Interpretation of Results**: Analyze the implications of the experimental results, discussing the strengths and limitations of the proposed system.\n- **Robustness and Generalization**: Evaluate the system's robustness to variations in sensor data, exercise execution styles, and its applicability to real-world clinical settings.\n- **Future Directions**: Propose future research directions, such as improving sensor technology, expanding the dataset with more exercise types, or integrating feedback mechanisms for real-time adjustment of exercise execution.\n\n## 6. Conclusion\n- **Summary**: Summarize the contributions of the research in developing an autonomous system for detecting and evaluating physical therapy exercises using wearable motion sensors.\n- **Practical Implications**: Discuss the potential impact of the system on improving patient outcomes in physical therapy and facilitating therapist-patient interactions.\n- **Final Remarks**: Highlight the significance of the MTMM-DTW algorithm and its role in advancing automated systems for healthcare applications.\n\n## References\n- List all the references cited throughout the paper, including papers, books, and relevant online resources.\n\n## Appendix\n- Include supplementary materials such as detailed algorithm pseudocode, additional experimental results, or data visualization plots.\n","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:40:53.028231Z","iopub.execute_input":"2024-07-17T10:40:53.029279Z","iopub.status.idle":"2024-07-17T10:40:53.830481Z","shell.execute_reply.started":"2024-07-17T10:40:53.029232Z","shell.execute_reply":"2024-07-17T10:40:53.829363Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":"# Step 1: Load Data","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\n# Define a function to read the file with a semicolon delimiter\ndef read_text_file(file_path):\n    return pd.read_csv(file_path, delimiter=';', engine='python')\n\n# Example usage\nfile_path = '/kaggle/input/physical-therapy-exercises-dataset/s1/e2/u4/test.txt'\ndf_test = read_text_file(file_path)\n\n# Display the first few rows\nprint(df_test.head())\n","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.063741Z","iopub.execute_input":"2024-07-17T10:38:26.064248Z","iopub.status.idle":"2024-07-17T10:38:26.181803Z","shell.execute_reply.started":"2024-07-17T10:38:26.064216Z","shell.execute_reply":"2024-07-17T10:38:26.180770Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"   time index     acc_x     acc_y     acc_z     gyr_x     gyr_y     gyr_z  \\\n0           1  8.949058  1.226986  3.799527  0.004876 -0.007091 -0.007356   \n1           2  8.897706  1.212421  3.804007 -0.000397  0.017726  0.001702   \n2           3  8.914928  1.212310  3.825989  0.017290 -0.012345  0.001399   \n3           4  8.919883  1.250903  3.867519  0.014704  0.001779 -0.000275   \n4           5  8.929433  1.241539  3.799473  0.012004 -0.007073 -0.003859   \n\n      mag_x     mag_y     mag_z  \n0 -0.498172 -0.338455 -0.489630  \n1 -0.499270 -0.336987 -0.489986  \n2 -0.498544 -0.337677 -0.488999  \n3 -0.497178 -0.336556 -0.490543  \n4 -0.498584 -0.337391 -0.489673  \n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Step 2: Basic Information","metadata":{}},{"cell_type":"code","source":"# Display the first few rows of the dataset\nprint(\"First few rows of the dataset:\")\ndf_test.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.183166Z","iopub.execute_input":"2024-07-17T10:38:26.183581Z","iopub.status.idle":"2024-07-17T10:38:26.206487Z","shell.execute_reply.started":"2024-07-17T10:38:26.183544Z","shell.execute_reply":"2024-07-17T10:38:26.205395Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"First few rows of the dataset:\n","output_type":"stream"},{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   time index     acc_x     acc_y     acc_z     gyr_x     gyr_y     gyr_z  \\\n0           1  8.949058  1.226986  3.799527  0.004876 -0.007091 -0.007356   \n1           2  8.897706  1.212421  3.804007 -0.000397  0.017726  0.001702   \n2           3  8.914928  1.212310  3.825989  0.017290 -0.012345  0.001399   \n3           4  8.919883  1.250903  3.867519  0.014704  0.001779 -0.000275   \n4           5  8.929433  1.241539  3.799473  0.012004 -0.007073 -0.003859   \n\n      mag_x     mag_y     mag_z  \n0 -0.498172 -0.338455 -0.489630  \n1 -0.499270 -0.336987 -0.489986  \n2 -0.498544 -0.337677 -0.488999  \n3 -0.497178 -0.336556 -0.490543  \n4 -0.498584 -0.337391 -0.489673  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>time index</th>\n      <th>acc_x</th>\n      <th>acc_y</th>\n      <th>acc_z</th>\n      <th>gyr_x</th>\n      <th>gyr_y</th>\n      <th>gyr_z</th>\n      <th>mag_x</th>\n      <th>mag_y</th>\n      <th>mag_z</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>8.949058</td>\n      <td>1.226986</td>\n      <td>3.799527</td>\n      <td>0.004876</td>\n      <td>-0.007091</td>\n      <td>-0.007356</td>\n      <td>-0.498172</td>\n      <td>-0.338455</td>\n      <td>-0.489630</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>8.897706</td>\n      <td>1.212421</td>\n      <td>3.804007</td>\n      <td>-0.000397</td>\n      <td>0.017726</td>\n      <td>0.001702</td>\n      <td>-0.499270</td>\n      <td>-0.336987</td>\n      <td>-0.489986</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>8.914928</td>\n      <td>1.212310</td>\n      <td>3.825989</td>\n      <td>0.017290</td>\n      <td>-0.012345</td>\n      <td>0.001399</td>\n      <td>-0.498544</td>\n      <td>-0.337677</td>\n      <td>-0.488999</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>8.919883</td>\n      <td>1.250903</td>\n      <td>3.867519</td>\n      <td>0.014704</td>\n      <td>0.001779</td>\n      <td>-0.000275</td>\n      <td>-0.497178</td>\n      <td>-0.336556</td>\n      <td>-0.490543</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>8.929433</td>\n      <td>1.241539</td>\n      <td>3.799473</td>\n      <td>0.012004</td>\n      <td>-0.007073</td>\n      <td>-0.003859</td>\n      <td>-0.498584</td>\n      <td>-0.337391</td>\n      <td>-0.489673</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Display the last few rows of the dataset\nprint(\"Last few rows of the dataset:\")\ndf_test.tail()","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.208058Z","iopub.execute_input":"2024-07-17T10:38:26.208492Z","iopub.status.idle":"2024-07-17T10:38:26.228195Z","shell.execute_reply.started":"2024-07-17T10:38:26.208450Z","shell.execute_reply":"2024-07-17T10:38:26.226868Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Last few rows of the dataset:\n","output_type":"stream"},{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"      time index     acc_x     acc_y     acc_z     gyr_x     gyr_y     gyr_z  \\\n5882        5883  8.993524  1.092427  3.868691  0.023181  0.008705  0.015563   \n5883        5884  8.963969  1.087822  3.819874  0.012494  0.019357  0.019258   \n5884        5885  8.929895  1.039247  3.836458  0.010816  0.023688  0.010391   \n5885        5886  8.891074  0.995318  3.894357 -0.001858  0.004233  0.009492   \n5886        5887  8.920616  0.966107  3.916281  0.022382  0.012147  0.008446   \n\n         mag_x     mag_y     mag_z  \n5882 -0.503762 -0.325020 -0.491648  \n5883 -0.503883 -0.324762 -0.491394  \n5884 -0.504695 -0.325483 -0.494218  \n5885 -0.505196 -0.324974 -0.493591  \n5886 -0.503885 -0.324560 -0.493791  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>time index</th>\n      <th>acc_x</th>\n      <th>acc_y</th>\n      <th>acc_z</th>\n      <th>gyr_x</th>\n      <th>gyr_y</th>\n      <th>gyr_z</th>\n      <th>mag_x</th>\n      <th>mag_y</th>\n      <th>mag_z</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5882</th>\n      <td>5883</td>\n      <td>8.993524</td>\n      <td>1.092427</td>\n      <td>3.868691</td>\n      <td>0.023181</td>\n      <td>0.008705</td>\n      <td>0.015563</td>\n      <td>-0.503762</td>\n      <td>-0.325020</td>\n      <td>-0.491648</td>\n    </tr>\n    <tr>\n      <th>5883</th>\n      <td>5884</td>\n      <td>8.963969</td>\n      <td>1.087822</td>\n      <td>3.819874</td>\n      <td>0.012494</td>\n      <td>0.019357</td>\n      <td>0.019258</td>\n      <td>-0.503883</td>\n      <td>-0.324762</td>\n      <td>-0.491394</td>\n    </tr>\n    <tr>\n      <th>5884</th>\n      <td>5885</td>\n      <td>8.929895</td>\n      <td>1.039247</td>\n      <td>3.836458</td>\n      <td>0.010816</td>\n      <td>0.023688</td>\n      <td>0.010391</td>\n      <td>-0.504695</td>\n      <td>-0.325483</td>\n      <td>-0.494218</td>\n    </tr>\n    <tr>\n      <th>5885</th>\n      <td>5886</td>\n      <td>8.891074</td>\n      <td>0.995318</td>\n      <td>3.894357</td>\n      <td>-0.001858</td>\n      <td>0.004233</td>\n      <td>0.009492</td>\n      <td>-0.505196</td>\n      <td>-0.324974</td>\n      <td>-0.493591</td>\n    </tr>\n    <tr>\n      <th>5886</th>\n      <td>5887</td>\n      <td>8.920616</td>\n      <td>0.966107</td>\n      <td>3.916281</td>\n      <td>0.022382</td>\n      <td>0.012147</td>\n      <td>0.008446</td>\n      <td>-0.503885</td>\n      <td>-0.324560</td>\n      <td>-0.493791</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Display a sample of rows from the dataset\nprint(\"Sample of rows from the dataset:\")\ndf_test.sample(10)","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.231681Z","iopub.execute_input":"2024-07-17T10:38:26.232454Z","iopub.status.idle":"2024-07-17T10:38:26.261888Z","shell.execute_reply.started":"2024-07-17T10:38:26.232409Z","shell.execute_reply":"2024-07-17T10:38:26.260810Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"Sample of rows from the dataset:\n","output_type":"stream"},{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"      time index     acc_x     acc_y     acc_z     gyr_x     gyr_y     gyr_z  \\\n1300        1301  9.335152  1.048558  2.701323 -0.087999  0.239077  0.015481   \n4031        4032  8.809064  1.055956  4.334620  0.069354 -0.023280  0.011728   \n2326        2327  9.214703  1.105124  3.108427  0.005328  0.014293  0.010409   \n4387        4388  9.573163  0.849927  2.359489 -0.026805  0.455309  0.000730   \n3087        3088  9.752108  1.217440 -0.937905  0.046486 -0.762691  0.006512   \n1329        1330  8.681295  1.084527  3.290583  0.260888 -0.350714 -0.047525   \n3139        3140  9.200772  0.935682  3.097322 -0.004941  0.148279 -0.023791   \n433          434  9.375882  1.288896  2.105220  0.206698 -0.417208 -0.025695   \n131          132  9.632236  1.333758 -1.115959  0.007147  0.007992 -0.011014   \n170          171  9.662062  1.309024 -1.018658  0.011561  0.006237 -0.007499   \n\n         mag_x     mag_y     mag_z  \n1300 -0.560825 -0.326050 -0.432478  \n4031 -0.482406 -0.322935 -0.514713  \n2326 -0.538783 -0.328480 -0.452095  \n4387 -0.597657 -0.335030 -0.370042  \n3087 -0.677647 -0.343175 -0.183669  \n1329 -0.534253 -0.328014 -0.459049  \n3139 -0.543999 -0.312067 -0.457885  \n433  -0.585755 -0.363331 -0.362934  \n131  -0.666053 -0.382814 -0.142183  \n170  -0.666219 -0.380470 -0.149570  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>time index</th>\n      <th>acc_x</th>\n      <th>acc_y</th>\n      <th>acc_z</th>\n      <th>gyr_x</th>\n      <th>gyr_y</th>\n      <th>gyr_z</th>\n      <th>mag_x</th>\n      <th>mag_y</th>\n      <th>mag_z</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1300</th>\n      <td>1301</td>\n      <td>9.335152</td>\n      <td>1.048558</td>\n      <td>2.701323</td>\n      <td>-0.087999</td>\n      <td>0.239077</td>\n      <td>0.015481</td>\n      <td>-0.560825</td>\n      <td>-0.326050</td>\n      <td>-0.432478</td>\n    </tr>\n    <tr>\n      <th>4031</th>\n      <td>4032</td>\n      <td>8.809064</td>\n      <td>1.055956</td>\n      <td>4.334620</td>\n      <td>0.069354</td>\n      <td>-0.023280</td>\n      <td>0.011728</td>\n      <td>-0.482406</td>\n      <td>-0.322935</td>\n      <td>-0.514713</td>\n    </tr>\n    <tr>\n      <th>2326</th>\n      <td>2327</td>\n      <td>9.214703</td>\n      <td>1.105124</td>\n      <td>3.108427</td>\n      <td>0.005328</td>\n      <td>0.014293</td>\n      <td>0.010409</td>\n      <td>-0.538783</td>\n      <td>-0.328480</td>\n      <td>-0.452095</td>\n    </tr>\n    <tr>\n      <th>4387</th>\n      <td>4388</td>\n      <td>9.573163</td>\n      <td>0.849927</td>\n      <td>2.359489</td>\n      <td>-0.026805</td>\n      <td>0.455309</td>\n      <td>0.000730</td>\n      <td>-0.597657</td>\n      <td>-0.335030</td>\n      <td>-0.370042</td>\n    </tr>\n    <tr>\n      <th>3087</th>\n      <td>3088</td>\n      <td>9.752108</td>\n      <td>1.217440</td>\n      <td>-0.937905</td>\n      <td>0.046486</td>\n      <td>-0.762691</td>\n      <td>0.006512</td>\n      <td>-0.677647</td>\n      <td>-0.343175</td>\n      <td>-0.183669</td>\n    </tr>\n    <tr>\n      <th>1329</th>\n      <td>1330</td>\n      <td>8.681295</td>\n      <td>1.084527</td>\n      <td>3.290583</td>\n      <td>0.260888</td>\n      <td>-0.350714</td>\n      <td>-0.047525</td>\n      <td>-0.534253</td>\n      <td>-0.328014</td>\n      <td>-0.459049</td>\n    </tr>\n    <tr>\n      <th>3139</th>\n      <td>3140</td>\n      <td>9.200772</td>\n      <td>0.935682</td>\n      <td>3.097322</td>\n      <td>-0.004941</td>\n      <td>0.148279</td>\n      <td>-0.023791</td>\n      <td>-0.543999</td>\n      <td>-0.312067</td>\n      <td>-0.457885</td>\n    </tr>\n    <tr>\n      <th>433</th>\n      <td>434</td>\n      <td>9.375882</td>\n      <td>1.288896</td>\n      <td>2.105220</td>\n      <td>0.206698</td>\n      <td>-0.417208</td>\n      <td>-0.025695</td>\n      <td>-0.585755</td>\n      <td>-0.363331</td>\n      <td>-0.362934</td>\n    </tr>\n    <tr>\n      <th>131</th>\n      <td>132</td>\n      <td>9.632236</td>\n      <td>1.333758</td>\n      <td>-1.115959</td>\n      <td>0.007147</td>\n      <td>0.007992</td>\n      <td>-0.011014</td>\n      <td>-0.666053</td>\n      <td>-0.382814</td>\n      <td>-0.142183</td>\n    </tr>\n    <tr>\n      <th>170</th>\n      <td>171</td>\n      <td>9.662062</td>\n      <td>1.309024</td>\n      <td>-1.018658</td>\n      <td>0.011561</td>\n      <td>0.006237</td>\n      <td>-0.007499</td>\n      <td>-0.666219</td>\n      <td>-0.380470</td>\n      <td>-0.149570</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Get summary statistics of the DataFrame\nprint(\"Summary Statistics:\")\ndf_test.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.263377Z","iopub.execute_input":"2024-07-17T10:38:26.263773Z","iopub.status.idle":"2024-07-17T10:38:26.314823Z","shell.execute_reply.started":"2024-07-17T10:38:26.263742Z","shell.execute_reply":"2024-07-17T10:38:26.313737Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"Summary Statistics:\n","output_type":"stream"},{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"        time index        acc_x        acc_y        acc_z        gyr_x  \\\ncount  5887.000000  5887.000000  5887.000000  5887.000000  5887.000000   \nmean   2944.000000     9.256574     0.970093     1.868712     0.009126   \nstd    1699.574849     0.432329     0.370935     2.301590     0.107383   \nmin       1.000000     5.561043    -2.924074    -2.749047    -1.117370   \n25%    1472.500000     9.050755     0.790026    -0.252016    -0.021585   \n50%    2944.000000     9.327045     1.048579     2.694571     0.006199   \n75%    4415.500000     9.593083     1.199374     3.580690     0.031255   \nmax    5887.000000    10.969929     3.789065     8.445727     1.952685   \n\n             gyr_y        gyr_z        mag_x        mag_y        mag_z  \ncount  5887.000000  5887.000000  5887.000000  5887.000000  5887.000000  \nmean      0.003187     0.003736    -0.576057    -0.323044    -0.366528  \nstd       0.230530     0.029899     0.076770     0.047020     0.162882  \nmin      -1.727805    -0.357997    -0.696968    -0.408539    -0.705027  \n25%      -0.025578    -0.007609    -0.652705    -0.363976    -0.490609  \n50%       0.007197     0.002514    -0.558715    -0.325551    -0.430636  \n75%       0.041720     0.014996    -0.523253    -0.292253    -0.229613  \nmax       3.926290     0.605443    -0.275331    -0.154972    -0.015946  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>time index</th>\n      <th>acc_x</th>\n      <th>acc_y</th>\n      <th>acc_z</th>\n      <th>gyr_x</th>\n      <th>gyr_y</th>\n      <th>gyr_z</th>\n      <th>mag_x</th>\n      <th>mag_y</th>\n      <th>mag_z</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n      <td>5887.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2944.000000</td>\n      <td>9.256574</td>\n      <td>0.970093</td>\n      <td>1.868712</td>\n      <td>0.009126</td>\n      <td>0.003187</td>\n      <td>0.003736</td>\n      <td>-0.576057</td>\n      <td>-0.323044</td>\n      <td>-0.366528</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1699.574849</td>\n      <td>0.432329</td>\n      <td>0.370935</td>\n      <td>2.301590</td>\n      <td>0.107383</td>\n      <td>0.230530</td>\n      <td>0.029899</td>\n      <td>0.076770</td>\n      <td>0.047020</td>\n      <td>0.162882</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>5.561043</td>\n      <td>-2.924074</td>\n      <td>-2.749047</td>\n      <td>-1.117370</td>\n      <td>-1.727805</td>\n      <td>-0.357997</td>\n      <td>-0.696968</td>\n      <td>-0.408539</td>\n      <td>-0.705027</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1472.500000</td>\n      <td>9.050755</td>\n      <td>0.790026</td>\n      <td>-0.252016</td>\n      <td>-0.021585</td>\n      <td>-0.025578</td>\n      <td>-0.007609</td>\n      <td>-0.652705</td>\n      <td>-0.363976</td>\n      <td>-0.490609</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2944.000000</td>\n      <td>9.327045</td>\n      <td>1.048579</td>\n      <td>2.694571</td>\n      <td>0.006199</td>\n      <td>0.007197</td>\n      <td>0.002514</td>\n      <td>-0.558715</td>\n      <td>-0.325551</td>\n      <td>-0.430636</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>4415.500000</td>\n      <td>9.593083</td>\n      <td>1.199374</td>\n      <td>3.580690</td>\n      <td>0.031255</td>\n      <td>0.041720</td>\n      <td>0.014996</td>\n      <td>-0.523253</td>\n      <td>-0.292253</td>\n      <td>-0.229613</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>5887.000000</td>\n      <td>10.969929</td>\n      <td>3.789065</td>\n      <td>8.445727</td>\n      <td>1.952685</td>\n      <td>3.926290</td>\n      <td>0.605443</td>\n      <td>-0.275331</td>\n      <td>-0.154972</td>\n      <td>-0.015946</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Display basic information about the dataset\nprint(\"Basic information about the dataset:\")\nprint(df_test.info())","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.316003Z","iopub.execute_input":"2024-07-17T10:38:26.316308Z","iopub.status.idle":"2024-07-17T10:38:26.337117Z","shell.execute_reply.started":"2024-07-17T10:38:26.316281Z","shell.execute_reply":"2024-07-17T10:38:26.335864Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"Basic information about the dataset:\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5887 entries, 0 to 5886\nData columns (total 10 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   time index  5887 non-null   int64  \n 1   acc_x       5887 non-null   float64\n 2   acc_y       5887 non-null   float64\n 3   acc_z       5887 non-null   float64\n 4   gyr_x       5887 non-null   float64\n 5   gyr_y       5887 non-null   float64\n 6   gyr_z       5887 non-null   float64\n 7   mag_x       5887 non-null   float64\n 8   mag_y       5887 non-null   float64\n 9   mag_z       5887 non-null   float64\ndtypes: float64(9), int64(1)\nmemory usage: 460.0 KB\nNone\n","output_type":"stream"}]},{"cell_type":"code","source":"# Display number of rows and columns\nprint(f\"Number of rows: {df_test.shape[0]}, Number of columns: {df_test.shape[1]}\")","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.338600Z","iopub.execute_input":"2024-07-17T10:38:26.339078Z","iopub.status.idle":"2024-07-17T10:38:26.346800Z","shell.execute_reply.started":"2024-07-17T10:38:26.339037Z","shell.execute_reply":"2024-07-17T10:38:26.345639Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"Number of rows: 5887, Number of columns: 10\n","output_type":"stream"}]},{"cell_type":"code","source":"# Check for missing values in the dataset\nmissing_values = df_test.isnull().sum()\n\n\nprint(\"Missing values in the dataset:\")\nprint(missing_values)","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.348069Z","iopub.execute_input":"2024-07-17T10:38:26.348439Z","iopub.status.idle":"2024-07-17T10:38:26.360860Z","shell.execute_reply.started":"2024-07-17T10:38:26.348407Z","shell.execute_reply":"2024-07-17T10:38:26.359570Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"Missing values in the dataset:\ntime index    0\nacc_x         0\nacc_y         0\nacc_z         0\ngyr_x         0\ngyr_y         0\ngyr_z         0\nmag_x         0\nmag_y         0\nmag_z         0\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Summary and Insights","metadata":{}},{"cell_type":"code","source":"# Basic information about the dataset\nbasic_info = \"\"\"\nBasic information about the dataset:\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5887 entries, 0 to 5886\nData columns (total 10 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   time index  5887 non-null   int64  \n 1   acc_x       5887 non-null   float64\n 2   acc_y       5887 non-null   float64\n 3   acc_z       5887 non-null   float64\n 4   gyr_x       5887 non-null   float64\n 5   gyr_y       5887 non-null   float64\n 6   gyr_z       5887 non-null   float64\n 7   mag_x       5887 non-null   float64\n 8   mag_y       5887 non-null   float64\n 9   mag_z       5887 non-null   float64\ndtypes: float64(9), int64(1)\nmemory usage: 460.0 KB\n\"\"\"\n\n# Number of rows and columns\nrows_columns_info = \"Number of rows: 5887, Number of columns: 10\"\n\n# Missing values in the dataset\nmissing_values_info = \"\"\"\nMissing values in the dataset:\ntime index    0\nacc_x         0\nacc_y         0\nacc_z         0\ngyr_x         0\ngyr_y         0\ngyr_z         0\nmag_x         0\nmag_y         0\nmag_z         0\n\"\"\"\n\n# Combine all information and print\nsummary_and_insights = basic_info.strip() + \"\\n\\n\" + rows_columns_info + \"\\n\\n\" + missing_values_info.strip()\nprint(summary_and_insights)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:38:26.362614Z","iopub.execute_input":"2024-07-17T10:38:26.363055Z","iopub.status.idle":"2024-07-17T10:38:26.372612Z","shell.execute_reply.started":"2024-07-17T10:38:26.363021Z","shell.execute_reply":"2024-07-17T10:38:26.371424Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Basic information about the dataset:\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5887 entries, 0 to 5886\nData columns (total 10 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   time index  5887 non-null   int64  \n 1   acc_x       5887 non-null   float64\n 2   acc_y       5887 non-null   float64\n 3   acc_z       5887 non-null   float64\n 4   gyr_x       5887 non-null   float64\n 5   gyr_y       5887 non-null   float64\n 6   gyr_z       5887 non-null   float64\n 7   mag_x       5887 non-null   float64\n 8   mag_y       5887 non-null   float64\n 9   mag_z       5887 non-null   float64\ndtypes: float64(9), int64(1)\nmemory usage: 460.0 KB\n\nNumber of rows: 5887, Number of columns: 10\n\nMissing values in the dataset:\ntime index    0\nacc_x         0\nacc_y         0\nacc_z         0\ngyr_x         0\ngyr_y         0\ngyr_z         0\nmag_x         0\nmag_y         0\nmag_z         0\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Step 3: Data Cleaning","metadata":{}},{"cell_type":"code","source":"# Check for missing values\nmissing_values = df_test.isnull().sum()\n\n# Print message indicating data cleaning status\nprint(\"Step 3: Data Cleaning (Data Check)\")\nprint(\"-------------------------------\")\nprint(\"Checking for missing values...\")\nprint()\n\n# If no missing values found\nif missing_values.sum() == 0:\n    print(\"The data has already been cleaned and prepared for analysis.\")\n    print(\"No further cleaning is necessary at this stage.\")\nelse:\n    print(\"Missing values detected:\")\n    print(missing_values)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:39:55.745059Z","iopub.execute_input":"2024-07-17T10:39:55.746164Z","iopub.status.idle":"2024-07-17T10:39:55.754732Z","shell.execute_reply.started":"2024-07-17T10:39:55.746124Z","shell.execute_reply":"2024-07-17T10:39:55.753634Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"Step 3: Data Cleaning (Data Check)\n-------------------------------\nChecking for missing values...\n\nThe data has already been cleaned and prepared for analysis.\nNo further cleaning is necessary at this stage.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Step 4: Univariate Analysis","metadata":{}},{"cell_type":"code","source":"# Histograms for numerical columns\ndf_test.hist(bins=30, figsize=(15, 10))\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:41:33.579358Z","iopub.execute_input":"2024-07-17T10:41:33.580036Z","iopub.status.idle":"2024-07-17T10:41:36.047370Z","shell.execute_reply.started":"2024-07-17T10:41:33.579999Z","shell.execute_reply":"2024-07-17T10:41:36.046147Z"},"trusted":true},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 12 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Box plots for numerical columns\nplt.figure(figsize=(15, 10))\nsns.boxplot(data=df_test)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-17T10:42:11.567553Z","iopub.execute_input":"2024-07-17T10:42:11.567969Z","iopub.status.idle":"2024-07-17T10:42:11.994512Z","shell.execute_reply.started":"2024-07-17T10:42:11.567935Z","shell.execute_reply":"2024-07-17T10:42:11.993360Z"},"trusted":true},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]}]}