{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9210446,"sourceType":"datasetVersion","datasetId":5569279}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-13T06:34:59.304517Z","iopub.execute_input":"2024-09-13T06:34:59.305667Z","iopub.status.idle":"2024-09-13T06:34:59.321129Z","shell.execute_reply.started":"2024-09-13T06:34:59.305607Z","shell.execute_reply":"2024-09-13T06:34:59.319486Z"},"trusted":true},"execution_count":194,"outputs":[{"name":"stdout","text":"/kaggle/input/2024-academic-ranking-of-world-universities/shanghai_ranking_2024.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# University Ranking Prediction Using Machine Learning","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/2024-academic-ranking-of-world-universities/shanghai_ranking_2024.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.323466Z","iopub.execute_input":"2024-09-13T06:34:59.323864Z","iopub.status.idle":"2024-09-13T06:34:59.335023Z","shell.execute_reply.started":"2024-09-13T06:34:59.323822Z","shell.execute_reply":"2024-09-13T06:34:59.333994Z"},"trusted":true},"execution_count":195,"outputs":[]},{"cell_type":"code","source":"# Display the first few rows\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.336360Z","iopub.execute_input":"2024-09-13T06:34:59.336712Z","iopub.status.idle":"2024-09-13T06:34:59.356652Z","shell.execute_reply.started":"2024-09-13T06:34:59.336666Z","shell.execute_reply":"2024-09-13T06:34:59.355376Z"},"trusted":true},"execution_count":196,"outputs":[{"execution_count":196,"output_type":"execute_result","data":{"text/plain":"  Rank                              University_Name National/Regional Rank  \\\n0    1                           Harvard University                      1   \n1    2                          Stanford University                      2   \n2    3  Massachusetts Institute of Technology (MIT)                      3   \n3    4                      University of Cambridge                      1   \n4    5           University of California, Berkeley                      4   \n\n   Alumni  Award   Hici    N&S    PUB   PCP  \n0   100.0   97.1  100.0  100.0  100.0  85.7  \n1    45.3   88.1   73.1   83.9   73.1  59.6  \n2    71.9   82.8   55.2   70.8   59.1  73.6  \n3    78.2   90.8   45.1   59.8   67.2  60.6  \n4    65.3   76.5   46.9   62.8   57.1  55.5  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Rank</th>\n      <th>University_Name</th>\n      <th>National/Regional Rank</th>\n      <th>Alumni</th>\n      <th>Award</th>\n      <th>Hici</th>\n      <th>N&amp;S</th>\n      <th>PUB</th>\n      <th>PCP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Harvard University</td>\n      <td>1</td>\n      <td>100.0</td>\n      <td>97.1</td>\n      <td>100.0</td>\n      <td>100.0</td>\n      <td>100.0</td>\n      <td>85.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Stanford University</td>\n      <td>2</td>\n      <td>45.3</td>\n      <td>88.1</td>\n      <td>73.1</td>\n      <td>83.9</td>\n      <td>73.1</td>\n      <td>59.6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Massachusetts Institute of Technology (MIT)</td>\n      <td>3</td>\n      <td>71.9</td>\n      <td>82.8</td>\n      <td>55.2</td>\n      <td>70.8</td>\n      <td>59.1</td>\n      <td>73.6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>University of Cambridge</td>\n      <td>1</td>\n      <td>78.2</td>\n      <td>90.8</td>\n      <td>45.1</td>\n      <td>59.8</td>\n      <td>67.2</td>\n      <td>60.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>University of California, Berkeley</td>\n      <td>4</td>\n      <td>65.3</td>\n      <td>76.5</td>\n      <td>46.9</td>\n      <td>62.8</td>\n      <td>57.1</td>\n      <td>55.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Display the last few rows\ndf.tail()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.358403Z","iopub.execute_input":"2024-09-13T06:34:59.359307Z","iopub.status.idle":"2024-09-13T06:34:59.382003Z","shell.execute_reply.started":"2024-09-13T06:34:59.359247Z","shell.execute_reply":"2024-09-13T06:34:59.380697Z"},"trusted":true},"execution_count":197,"outputs":[{"execution_count":197,"output_type":"execute_result","data":{"text/plain":"         Rank                    University_Name National/Regional Rank  \\\n995  901-1000           Universidad Andrés Bello                      4   \n996  901-1000               University of Lahore                    3-5   \n997  901-1000                Linnaeus University                     13   \n998  901-1000            University of Wuppertal                  49-51   \n999  901-1000  Abdul Wali Khan University Mardan                    3-5   \n\n     Alumni  Award  Hici  N&S   PUB   PCP  \n995     0.0    0.0   6.5  4.0  21.1   9.5  \n996     0.0    0.0   0.0  1.4  27.5  11.7  \n997     0.0    0.0   6.5  3.5  19.0  13.3  \n998     0.0    0.0   0.0  6.9  19.3  19.4  \n999     0.0    0.0   6.5  3.8  20.9   9.4  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Rank</th>\n      <th>University_Name</th>\n      <th>National/Regional Rank</th>\n      <th>Alumni</th>\n      <th>Award</th>\n      <th>Hici</th>\n      <th>N&amp;S</th>\n      <th>PUB</th>\n      <th>PCP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>995</th>\n      <td>901-1000</td>\n      <td>Universidad Andrés Bello</td>\n      <td>4</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6.5</td>\n      <td>4.0</td>\n      <td>21.1</td>\n      <td>9.5</td>\n    </tr>\n    <tr>\n      <th>996</th>\n      <td>901-1000</td>\n      <td>University of Lahore</td>\n      <td>3-5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.4</td>\n      <td>27.5</td>\n      <td>11.7</td>\n    </tr>\n    <tr>\n      <th>997</th>\n      <td>901-1000</td>\n      <td>Linnaeus University</td>\n      <td>13</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6.5</td>\n      <td>3.5</td>\n      <td>19.0</td>\n      <td>13.3</td>\n    </tr>\n    <tr>\n      <th>998</th>\n      <td>901-1000</td>\n      <td>University of Wuppertal</td>\n      <td>49-51</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6.9</td>\n      <td>19.3</td>\n      <td>19.4</td>\n    </tr>\n    <tr>\n      <th>999</th>\n      <td>901-1000</td>\n      <td>Abdul Wali Khan University Mardan</td>\n      <td>3-5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6.5</td>\n      <td>3.8</td>\n      <td>20.9</td>\n      <td>9.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Display the sample few rows\ndf.sample(10)","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.384643Z","iopub.execute_input":"2024-09-13T06:34:59.385104Z","iopub.status.idle":"2024-09-13T06:34:59.411473Z","shell.execute_reply.started":"2024-09-13T06:34:59.385061Z","shell.execute_reply":"2024-09-13T06:34:59.410031Z"},"trusted":true},"execution_count":198,"outputs":[{"execution_count":198,"output_type":"execute_result","data":{"text/plain":"         Rank                               University_Name  \\\n622   601-700                            Yanshan University   \n736   701-800                      Brunel University London   \n426   401-500                     The University of Georgia   \n599   501-600                     University of Strathclyde   \n785   701-800  King Fahd University of Petroleum & Minerals   \n763   701-800                         Kent State University   \n232   201-300         Heinrich Heine University Duesseldorf   \n929  901-1000                            Yangtze University   \n392   301-400              Beijing University of Technology   \n141   101-150                       University of Sao Paulo   \n\n    National/Regional Rank  Alumni  Award  Hici   N&S   PUB   PCP  \n622                115-137     0.0    0.0   0.0   6.8  33.6  13.0  \n736                  43-51     0.0    0.0   9.2   2.5  24.1  16.7  \n426                 99-114     0.0    0.0   0.0  13.2  42.3  18.1  \n599                  36-39     0.0    0.0   6.5   6.8  29.3  18.7  \n785                   8-10     0.0    0.0   0.0   0.0  31.1  20.4  \n763                156-167     0.0    0.0   9.2   4.3  21.1  13.6  \n232                  12-22    10.4    0.0  19.5  12.2  31.9  35.9  \n929                180-203     0.0    0.0   0.0   1.4  28.6  10.5  \n392                  52-74     0.0    0.0   9.2   7.8  46.7  16.8  \n141                      1     0.0    0.0  17.2  16.3  70.7  17.7  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Rank</th>\n      <th>University_Name</th>\n      <th>National/Regional Rank</th>\n      <th>Alumni</th>\n      <th>Award</th>\n      <th>Hici</th>\n      <th>N&amp;S</th>\n      <th>PUB</th>\n      <th>PCP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>622</th>\n      <td>601-700</td>\n      <td>Yanshan University</td>\n      <td>115-137</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6.8</td>\n      <td>33.6</td>\n      <td>13.0</td>\n    </tr>\n    <tr>\n      <th>736</th>\n      <td>701-800</td>\n      <td>Brunel University London</td>\n      <td>43-51</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.2</td>\n      <td>2.5</td>\n      <td>24.1</td>\n      <td>16.7</td>\n    </tr>\n    <tr>\n      <th>426</th>\n      <td>401-500</td>\n      <td>The University of Georgia</td>\n      <td>99-114</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>13.2</td>\n      <td>42.3</td>\n      <td>18.1</td>\n    </tr>\n    <tr>\n      <th>599</th>\n      <td>501-600</td>\n      <td>University of Strathclyde</td>\n      <td>36-39</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6.5</td>\n      <td>6.8</td>\n      <td>29.3</td>\n      <td>18.7</td>\n    </tr>\n    <tr>\n      <th>785</th>\n      <td>701-800</td>\n      <td>King Fahd University of Petroleum &amp; Minerals</td>\n      <td>8-10</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>31.1</td>\n      <td>20.4</td>\n    </tr>\n    <tr>\n      <th>763</th>\n      <td>701-800</td>\n      <td>Kent State University</td>\n      <td>156-167</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.2</td>\n      <td>4.3</td>\n      <td>21.1</td>\n      <td>13.6</td>\n    </tr>\n    <tr>\n      <th>232</th>\n      <td>201-300</td>\n      <td>Heinrich Heine University Duesseldorf</td>\n      <td>12-22</td>\n      <td>10.4</td>\n      <td>0.0</td>\n      <td>19.5</td>\n      <td>12.2</td>\n      <td>31.9</td>\n      <td>35.9</td>\n    </tr>\n    <tr>\n      <th>929</th>\n      <td>901-1000</td>\n      <td>Yangtze University</td>\n      <td>180-203</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.4</td>\n      <td>28.6</td>\n      <td>10.5</td>\n    </tr>\n    <tr>\n      <th>392</th>\n      <td>301-400</td>\n      <td>Beijing University of Technology</td>\n      <td>52-74</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.2</td>\n      <td>7.8</td>\n      <td>46.7</td>\n      <td>16.8</td>\n    </tr>\n    <tr>\n      <th>141</th>\n      <td>101-150</td>\n      <td>University of Sao Paulo</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>17.2</td>\n      <td>16.3</td>\n      <td>70.7</td>\n      <td>17.7</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Display basic information about the dataset\ndf.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.412956Z","iopub.execute_input":"2024-09-13T06:34:59.413361Z","iopub.status.idle":"2024-09-13T06:34:59.430994Z","shell.execute_reply.started":"2024-09-13T06:34:59.413317Z","shell.execute_reply":"2024-09-13T06:34:59.429706Z"},"trusted":true},"execution_count":199,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1000 entries, 0 to 999\nData columns (total 9 columns):\n #   Column                  Non-Null Count  Dtype  \n---  ------                  --------------  -----  \n 0   Rank                    1000 non-null   object \n 1   University_Name         1000 non-null   object \n 2   National/Regional Rank  1000 non-null   object \n 3   Alumni                  1000 non-null   float64\n 4   Award                   1000 non-null   float64\n 5   Hici                    1000 non-null   float64\n 6   N&S                     989 non-null    float64\n 7   PUB                     1000 non-null   float64\n 8   PCP                     1000 non-null   float64\ndtypes: float64(6), object(3)\nmemory usage: 70.4+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"# Summary statistics\ndf.describe(include=\"all\")","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.432586Z","iopub.execute_input":"2024-09-13T06:34:59.433054Z","iopub.status.idle":"2024-09-13T06:34:59.484134Z","shell.execute_reply.started":"2024-09-13T06:34:59.433009Z","shell.execute_reply":"2024-09-13T06:34:59.482879Z"},"trusted":true},"execution_count":200,"outputs":[{"execution_count":200,"output_type":"execute_result","data":{"text/plain":"            Rank     University_Name National/Regional Rank       Alumni  \\\ncount       1000                1000                   1000  1000.000000   \nunique        87                1000                    130          NaN   \ntop     901-1000  Harvard University                      1          NaN   \nfreq         100                   1                     60          NaN   \nmean         NaN                 NaN                    NaN     4.509600   \nstd          NaN                 NaN                    NaN    10.103201   \nmin          NaN                 NaN                    NaN     0.000000   \n25%          NaN                 NaN                    NaN     0.000000   \n50%          NaN                 NaN                    NaN     0.000000   \n75%          NaN                 NaN                    NaN     0.000000   \nmax          NaN                 NaN                    NaN   100.000000   \n\n             Award         Hici         N&S          PUB          PCP  \ncount   1000.00000  1000.000000  989.000000  1000.000000  1000.000000  \nunique         NaN          NaN         NaN          NaN          NaN  \ntop            NaN          NaN         NaN          NaN          NaN  \nfreq           NaN          NaN         NaN          NaN          NaN  \nmean       3.78120    10.734400   10.575126    35.113000    19.655300  \nstd       11.45538    10.949265   10.637247    13.684495     8.800436  \nmin        0.00000     0.000000    0.000000     9.300000     8.600000  \n25%        0.00000     0.000000    3.900000    25.775000    14.100000  \n50%        0.00000     9.200000    7.300000    31.700000    17.600000  \n75%        0.00000    14.600000   13.300000    41.425000    23.000000  \nmax      100.00000   100.000000  100.000000   100.000000   100.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Rank</th>\n      <th>University_Name</th>\n      <th>National/Regional Rank</th>\n      <th>Alumni</th>\n      <th>Award</th>\n      <th>Hici</th>\n      <th>N&amp;S</th>\n      <th>PUB</th>\n      <th>PCP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1000</td>\n      <td>1000</td>\n      <td>1000</td>\n      <td>1000.000000</td>\n      <td>1000.00000</td>\n      <td>1000.000000</td>\n      <td>989.000000</td>\n      <td>1000.000000</td>\n      <td>1000.000000</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>87</td>\n      <td>1000</td>\n      <td>130</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>901-1000</td>\n      <td>Harvard University</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>100</td>\n      <td>1</td>\n      <td>60</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4.509600</td>\n      <td>3.78120</td>\n      <td>10.734400</td>\n      <td>10.575126</td>\n      <td>35.113000</td>\n      <td>19.655300</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>10.103201</td>\n      <td>11.45538</td>\n      <td>10.949265</td>\n      <td>10.637247</td>\n      <td>13.684495</td>\n      <td>8.800436</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>9.300000</td>\n      <td>8.600000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>3.900000</td>\n      <td>25.775000</td>\n      <td>14.100000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>9.200000</td>\n      <td>7.300000</td>\n      <td>31.700000</td>\n      <td>17.600000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>14.600000</td>\n      <td>13.300000</td>\n      <td>41.425000</td>\n      <td>23.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>100.000000</td>\n      <td>100.00000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Check for missing values\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.485646Z","iopub.execute_input":"2024-09-13T06:34:59.486095Z","iopub.status.idle":"2024-09-13T06:34:59.496407Z","shell.execute_reply.started":"2024-09-13T06:34:59.486046Z","shell.execute_reply":"2024-09-13T06:34:59.495269Z"},"trusted":true},"execution_count":201,"outputs":[{"execution_count":201,"output_type":"execute_result","data":{"text/plain":"Rank                       0\nUniversity_Name            0\nNational/Regional Rank     0\nAlumni                     0\nAward                      0\nHici                       0\nN&S                       11\nPUB                        0\nPCP                        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['University_Name'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.497807Z","iopub.execute_input":"2024-09-13T06:34:59.498246Z","iopub.status.idle":"2024-09-13T06:34:59.513148Z","shell.execute_reply.started":"2024-09-13T06:34:59.498204Z","shell.execute_reply":"2024-09-13T06:34:59.511743Z"},"trusted":true},"execution_count":202,"outputs":[{"execution_count":202,"output_type":"execute_result","data":{"text/plain":"University_Name\nHarvard University                    1\nUral Federal University               1\nUniversity of Haifa                   1\nUniversità Della Svizzera Italiana    1\nManchester Metropolitan University    1\n                                     ..\nUniversity of Miami                   1\nJames Cook University                 1\nUniversity of Wollongong              1\nCairo University                      1\nAbdul Wali Khan University Mardan     1\nName: count, Length: 1000, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Creating copies of the DataFrame for various statistical operations\ndf_mean = df.copy()\ndf_median = df.copy()\ndf_mode = df.copy()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.514730Z","iopub.execute_input":"2024-09-13T06:34:59.515152Z","iopub.status.idle":"2024-09-13T06:34:59.522909Z","shell.execute_reply.started":"2024-09-13T06:34:59.515112Z","shell.execute_reply":"2024-09-13T06:34:59.521799Z"},"trusted":true},"execution_count":203,"outputs":[]},{"cell_type":"code","source":"df_mean.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.529141Z","iopub.execute_input":"2024-09-13T06:34:59.529651Z","iopub.status.idle":"2024-09-13T06:34:59.549492Z","shell.execute_reply.started":"2024-09-13T06:34:59.529605Z","shell.execute_reply":"2024-09-13T06:34:59.547965Z"},"trusted":true},"execution_count":204,"outputs":[{"execution_count":204,"output_type":"execute_result","data":{"text/plain":"  Rank                              University_Name National/Regional Rank  \\\n0    1                           Harvard University                      1   \n1    2                          Stanford University                      2   \n2    3  Massachusetts Institute of Technology (MIT)                      3   \n3    4                      University of Cambridge                      1   \n4    5           University of California, Berkeley                      4   \n\n   Alumni  Award   Hici    N&S    PUB   PCP  \n0   100.0   97.1  100.0  100.0  100.0  85.7  \n1    45.3   88.1   73.1   83.9   73.1  59.6  \n2    71.9   82.8   55.2   70.8   59.1  73.6  \n3    78.2   90.8   45.1   59.8   67.2  60.6  \n4    65.3   76.5   46.9   62.8   57.1  55.5  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Rank</th>\n      <th>University_Name</th>\n      <th>National/Regional Rank</th>\n      <th>Alumni</th>\n      <th>Award</th>\n      <th>Hici</th>\n      <th>N&amp;S</th>\n      <th>PUB</th>\n      <th>PCP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Harvard University</td>\n      <td>1</td>\n      <td>100.0</td>\n      <td>97.1</td>\n      <td>100.0</td>\n      <td>100.0</td>\n      <td>100.0</td>\n      <td>85.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Stanford University</td>\n      <td>2</td>\n      <td>45.3</td>\n      <td>88.1</td>\n      <td>73.1</td>\n      <td>83.9</td>\n      <td>73.1</td>\n      <td>59.6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Massachusetts Institute of Technology (MIT)</td>\n      <td>3</td>\n      <td>71.9</td>\n      <td>82.8</td>\n      <td>55.2</td>\n      <td>70.8</td>\n      <td>59.1</td>\n      <td>73.6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>University of Cambridge</td>\n      <td>1</td>\n      <td>78.2</td>\n      <td>90.8</td>\n      <td>45.1</td>\n      <td>59.8</td>\n      <td>67.2</td>\n      <td>60.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>University of California, Berkeley</td>\n      <td>4</td>\n      <td>65.3</td>\n      <td>76.5</td>\n      <td>46.9</td>\n      <td>62.8</td>\n      <td>57.1</td>\n      <td>55.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_mean.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.551499Z","iopub.execute_input":"2024-09-13T06:34:59.552037Z","iopub.status.idle":"2024-09-13T06:34:59.565353Z","shell.execute_reply.started":"2024-09-13T06:34:59.551979Z","shell.execute_reply":"2024-09-13T06:34:59.564143Z"},"trusted":true},"execution_count":205,"outputs":[{"execution_count":205,"output_type":"execute_result","data":{"text/plain":"Rank                       0\nUniversity_Name            0\nNational/Regional Rank     0\nAlumni                     0\nAward                      0\nHici                       0\nN&S                       11\nPUB                        0\nPCP                        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# 1. Fill with Mean, Median, or Mode:","metadata":{}},{"cell_type":"markdown","source":"# 1. Fill with Mean:\n### Replaces missing values with the average of the column.\n\n","metadata":{}},{"cell_type":"code","source":"df_mean['N&S']=df_mean['N&S'].fillna(df_mean['N&S'].mean())","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.566791Z","iopub.execute_input":"2024-09-13T06:34:59.567434Z","iopub.status.idle":"2024-09-13T06:34:59.580198Z","shell.execute_reply.started":"2024-09-13T06:34:59.567377Z","shell.execute_reply":"2024-09-13T06:34:59.578947Z"},"trusted":true},"execution_count":206,"outputs":[]},{"cell_type":"markdown","source":"# 2. Fill with Median:\n### This is useful for skewed data, replacing missing values with the median value.","metadata":{}},{"cell_type":"code","source":"df_median['N&S']=df_median['N&S'].fillna(df_mean['N&S'].median())","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.581655Z","iopub.execute_input":"2024-09-13T06:34:59.582121Z","iopub.status.idle":"2024-09-13T06:34:59.593563Z","shell.execute_reply.started":"2024-09-13T06:34:59.582078Z","shell.execute_reply":"2024-09-13T06:34:59.592408Z"},"trusted":true},"execution_count":207,"outputs":[]},{"cell_type":"markdown","source":"# 3. Fill with Mode:\n### The most frequent value in the column will be used to fill missing values.","metadata":{}},{"cell_type":"code","source":"df_mode['N&S'] = df_mode['N&S'].fillna(df_mode['N&S'].mode()[0])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.595117Z","iopub.execute_input":"2024-09-13T06:34:59.595521Z","iopub.status.idle":"2024-09-13T06:34:59.608039Z","shell.execute_reply.started":"2024-09-13T06:34:59.595467Z","shell.execute_reply":"2024-09-13T06:34:59.606510Z"},"trusted":true},"execution_count":208,"outputs":[]},{"cell_type":"code","source":"df_mean.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.609794Z","iopub.execute_input":"2024-09-13T06:34:59.610260Z","iopub.status.idle":"2024-09-13T06:34:59.624530Z","shell.execute_reply.started":"2024-09-13T06:34:59.610215Z","shell.execute_reply":"2024-09-13T06:34:59.623205Z"},"trusted":true},"execution_count":209,"outputs":[{"execution_count":209,"output_type":"execute_result","data":{"text/plain":"Rank                      0\nUniversity_Name           0\nNational/Regional Rank    0\nAlumni                    0\nAward                     0\nHici                      0\nN&S                       0\nPUB                       0\nPCP                       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# 2. Forward Fill (Propagating Previous Values):","metadata":{}},{"cell_type":"code","source":"df_forwardfill = df_backwardfill = df_interpolate = df_constant_value = df_drop_missing = df_ml_imputation = df.copy()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.626163Z","iopub.execute_input":"2024-09-13T06:34:59.626566Z","iopub.status.idle":"2024-09-13T06:34:59.636200Z","shell.execute_reply.started":"2024-09-13T06:34:59.626525Z","shell.execute_reply":"2024-09-13T06:34:59.634954Z"},"trusted":true},"execution_count":210,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.637510Z","iopub.execute_input":"2024-09-13T06:34:59.637870Z","iopub.status.idle":"2024-09-13T06:34:59.651537Z","shell.execute_reply.started":"2024-09-13T06:34:59.637827Z","shell.execute_reply":"2024-09-13T06:34:59.650084Z"},"trusted":true},"execution_count":211,"outputs":[{"execution_count":211,"output_type":"execute_result","data":{"text/plain":"Rank                       0\nUniversity_Name            0\nNational/Regional Rank     0\nAlumni                     0\nAward                      0\nHici                       0\nN&S                       11\nPUB                        0\nPCP                        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# 4. Forward Fill:\n#### Propagates the last valid value forward.","metadata":{}},{"cell_type":"code","source":"# Forward fill missing values\ndf_forwardfill['N&S'] = df_forwardfill['N&S'].ffill()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.655948Z","iopub.execute_input":"2024-09-13T06:34:59.656418Z","iopub.status.idle":"2024-09-13T06:34:59.663105Z","shell.execute_reply.started":"2024-09-13T06:34:59.656354Z","shell.execute_reply":"2024-09-13T06:34:59.662001Z"},"trusted":true},"execution_count":212,"outputs":[]},{"cell_type":"markdown","source":"# 5. Backward Fill:\n### Uses the next valid value to fill missing values.","metadata":{}},{"cell_type":"code","source":"df_backwardfill['N&S']= df_backwardfill['N&S'].bfill()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.664356Z","iopub.execute_input":"2024-09-13T06:34:59.664689Z","iopub.status.idle":"2024-09-13T06:34:59.674642Z","shell.execute_reply.started":"2024-09-13T06:34:59.664652Z","shell.execute_reply":"2024-09-13T06:34:59.673533Z"},"trusted":true},"execution_count":213,"outputs":[]},{"cell_type":"markdown","source":"# 6. Fill with a Constant Value:\n### You can replace missing values with a predefined constant, such as 0 or any domain-specific value.","metadata":{}},{"cell_type":"code","source":" df_constant_value['N&S']=df_constant_value['N&S'].fillna(0)","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.675987Z","iopub.execute_input":"2024-09-13T06:34:59.676352Z","iopub.status.idle":"2024-09-13T06:34:59.686893Z","shell.execute_reply.started":"2024-09-13T06:34:59.676314Z","shell.execute_reply":"2024-09-13T06:34:59.685872Z"},"trusted":true},"execution_count":214,"outputs":[]},{"cell_type":"markdown","source":"# 7. Interpolate:\n### Estimate missing values by interpolation.","metadata":{}},{"cell_type":"code","source":"# Fill missing values using interpolation\ndf_interpolate['N&S'] = df_interpolate['N&S'].interpolate()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.688525Z","iopub.execute_input":"2024-09-13T06:34:59.689509Z","iopub.status.idle":"2024-09-13T06:34:59.699353Z","shell.execute_reply.started":"2024-09-13T06:34:59.689453Z","shell.execute_reply":"2024-09-13T06:34:59.698357Z"},"trusted":true},"execution_count":215,"outputs":[]},{"cell_type":"markdown","source":"# 9. Machine Learning Imputation (KNN Imputer):\n#### Predict missing values using machine learning models like K-Nearest Neighbors (KNN).","metadata":{}},{"cell_type":"code","source":"from sklearn.impute import KNNImputer\n# Create KNN imputer and fit it to the dataset\nimputer = KNNImputer(n_neighbors=5)\ndf_ml_imputation[['N&S']]=imputer.fit_transform(df_ml_imputation[['N&S']])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.701140Z","iopub.execute_input":"2024-09-13T06:34:59.701511Z","iopub.status.idle":"2024-09-13T06:34:59.715364Z","shell.execute_reply.started":"2024-09-13T06:34:59.701472Z","shell.execute_reply":"2024-09-13T06:34:59.713885Z"},"trusted":true},"execution_count":216,"outputs":[]},{"cell_type":"markdown","source":"# 10. Drop Missing Values:\n#### If the missing values are too numerous, you might want to drop rows or columns containing them.","metadata":{}},{"cell_type":"code","source":"df_drop_missing = df_drop_missing[df_drop_missing['N&S'].notna()]","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.717060Z","iopub.execute_input":"2024-09-13T06:34:59.717567Z","iopub.status.idle":"2024-09-13T06:34:59.730103Z","shell.execute_reply.started":"2024-09-13T06:34:59.717505Z","shell.execute_reply":"2024-09-13T06:34:59.728715Z"},"trusted":true},"execution_count":217,"outputs":[]},{"cell_type":"code","source":"df_drop_missing.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.733857Z","iopub.execute_input":"2024-09-13T06:34:59.734390Z","iopub.status.idle":"2024-09-13T06:34:59.757108Z","shell.execute_reply.started":"2024-09-13T06:34:59.734332Z","shell.execute_reply":"2024-09-13T06:34:59.755554Z"},"trusted":true},"execution_count":218,"outputs":[{"execution_count":218,"output_type":"execute_result","data":{"text/plain":"  Rank                              University_Name National/Regional Rank  \\\n0    1                           Harvard University                      1   \n1    2                          Stanford University                      2   \n2    3  Massachusetts Institute of Technology (MIT)                      3   \n3    4                      University of Cambridge                      1   \n4    5           University of California, Berkeley                      4   \n\n   Alumni  Award   Hici    N&S    PUB   PCP  \n0   100.0   97.1  100.0  100.0  100.0  85.7  \n1    45.3   88.1   73.1   83.9   73.1  59.6  \n2    71.9   82.8   55.2   70.8   59.1  73.6  \n3    78.2   90.8   45.1   59.8   67.2  60.6  \n4    65.3   76.5   46.9   62.8   57.1  55.5  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Rank</th>\n      <th>University_Name</th>\n      <th>National/Regional Rank</th>\n      <th>Alumni</th>\n      <th>Award</th>\n      <th>Hici</th>\n      <th>N&amp;S</th>\n      <th>PUB</th>\n      <th>PCP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Harvard University</td>\n      <td>1</td>\n      <td>100.0</td>\n      <td>97.1</td>\n      <td>100.0</td>\n      <td>100.0</td>\n      <td>100.0</td>\n      <td>85.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Stanford University</td>\n      <td>2</td>\n      <td>45.3</td>\n      <td>88.1</td>\n      <td>73.1</td>\n      <td>83.9</td>\n      <td>73.1</td>\n      <td>59.6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Massachusetts Institute of Technology (MIT)</td>\n      <td>3</td>\n      <td>71.9</td>\n      <td>82.8</td>\n      <td>55.2</td>\n      <td>70.8</td>\n      <td>59.1</td>\n      <td>73.6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>University of Cambridge</td>\n      <td>1</td>\n      <td>78.2</td>\n      <td>90.8</td>\n      <td>45.1</td>\n      <td>59.8</td>\n      <td>67.2</td>\n      <td>60.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>University of California, Berkeley</td>\n      <td>4</td>\n      <td>65.3</td>\n      <td>76.5</td>\n      <td>46.9</td>\n      <td>62.8</td>\n      <td>57.1</td>\n      <td>55.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"import seaborn as sns\nsns.boxplot(df_drop_missing['Alumni'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.758694Z","iopub.execute_input":"2024-09-13T06:34:59.759169Z","iopub.status.idle":"2024-09-13T06:34:59.931584Z","shell.execute_reply.started":"2024-09-13T06:34:59.759125Z","shell.execute_reply":"2024-09-13T06:34:59.930244Z"},"trusted":true},"execution_count":219,"outputs":[{"execution_count":219,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAigAAAGdCAYAAAA44ojeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAjlklEQVR4nO3df2xddf3H8dfpLestW+9FWnbbrr1bNSJTfm2sLS3EGGyYgJiFabrc6hYkzOCYXQuSzWRDEaibfovjtywLP7QXJok/BpEZU3UqLV03RAoowzh3W2bvWHX3jpFb8N7z/cPshjvuBuPe9vPp7fOR3OS7z/vu8uaPL316e+85juu6rgAAACxSZHoBAACA4xEoAADAOgQKAACwDoECAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKxTbHqBDyOVSunAgQMqKyuT4zim1wEAAB+A67o6cuSIqqurVVR08vdIpmSgHDhwQLW1tabXAAAAH8Lw8LBqampO+pwpGShlZWWS/vcv6PP5DG8DAAA+iHg8rtra2vTP8ZOZkoFy7Nc6Pp+PQAEAYIr5IB/P4EOyAADAOgQKAACwDoECAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKxDoAAAAOsQKACs0tfXp9bWVvX19ZleBYBBpxwof/jDH3T11VerurpajuPoF7/4RcbcdV1t2LBBVVVVKi0tVUtLi1577bWM5/z73/9WW1ubfD6fzjjjDF133XV68803c/oXATD1JRIJdXd3KxqNqru7W4lEwvRKAAw55UA5evSoLrjgAt13331Z55s2bdLdd9+tBx98UAMDA5o5c6YWL16c8R+atrY2vfzyy/rNb36jp59+Wn/4wx+0cuXKD/9vAaAg9PT0aGxsTJI0NjamcDhseCMApjiu67of+i87jn7+859ryZIlkv737kl1dbVuuukm3XzzzZKkWCymQCCgRx55RMuWLdNf//pXffKTn9Tg4KAWLVokSdqxY4euvPJKjYyMqLq6+n3/ufF4XH6/X7FYjHvxAAViZGREK1asUDKZTJ8VFxfrkUceed+7ngKYGk7l53deP4Oyb98+jY6OqqWlJX3m9/vV2Nio/v5+SVJ/f7/OOOOMdJxIUktLi4qKijQwMJD1dcfHxxWPxzMeAAqH67ravHnzCc9z+N9RAKaovAbK6OioJCkQCGScBwKB9Gx0dFSzZ8/OmBcXF+vMM89MP+d4XV1d8vv96UdtbW0+1wZgWCQS0eDgYMa7J5KUTCY1ODioSCRiaDMApkyJb/GsW7dOsVgs/RgeHja9EoA8CgaDqq+vl8fjyTj3eDxqaGhQMBg0tBkAU/IaKJWVlZKkaDSacR6NRtOzyspKHTx4MGP+3//+V//+97/TzzleSUmJfD5fxgNA4XAcR+3t7Sc8dxzHwFYATMproNTV1amyslK9vb3ps3g8roGBATU1NUmSmpqadPjwYe3Zsyf9nN/+9rdKpVJqbGzM5zoAppCamhqFQqF0jDiOo1AopDlz5hjeDIAJpxwob775pl544QW98MILkv73wdgXXnhBkUhEjuNozZo1uv3227V9+3YNDQ1p+fLlqq6uTn/TZ/78+frc5z6n66+/Xrt27dKzzz6rG2+8UcuWLftA3+ABULja2tpUXl4uSaqoqFAoFDK8EQBTTjlQdu/erQULFmjBggWSpM7OTi1YsEAbNmyQJN1yyy1avXq1Vq5cqfr6er355pvasWOHvF5v+jV6enp0zjnn6LOf/ayuvPJKXXrppXrooYfy9K8EYKryer3q7OxUIBBQR0dHxn83AEwvOV0HxRSugwIAwNRj7DooAAAA+UCgAAAA6xAoAADAOgQKAACwDoECAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKxDoAAAAOsQKAAAwDoECgAAsA6BAgAArEOgAAAA6xAoAADAOgQKAACwDoECAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKxDoAAAAOsQKAAAwDoECgAAsA6BAgAArEOgAAAA6xAoAADAOgQKAACwDoECAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKxDoAAAAOsQKAAAwDoECgAAsA6BAgAArEOgAAAA6xAoAADAOgQKAACwDoECAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKxDoAAAAOsQKAAAwDoECgAAsA6BAgAArEOgAAAA6xAoAADAOgQKAACwDoECAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKyT90BJJpNav3696urqVFpaqo997GP67ne/K9d1089xXVcbNmxQVVWVSktL1dLSotdeey3fqwAAgCkq74GyceNGPfDAA7r33nv117/+VRs3btSmTZt0zz33pJ+zadMm3X333XrwwQc1MDCgmTNnavHixUokEvleBwAATEGO++63NvLg85//vAKBgLZu3Zo+W7p0qUpLS/WTn/xEruuqurpaN910k26++WZJUiwWUyAQ0COPPKJly5a97z8jHo/L7/crFovJ5/Plc30AADBBTuXnd97fQWlublZvb6/27t0rSfrLX/6iP/3pT7riiiskSfv27dPo6KhaWlrSf8fv96uxsVH9/f1ZX3N8fFzxeDzjAQAACldxvl9w7dq1isfjOuecc+TxeJRMJnXHHXeora1NkjQ6OipJCgQCGX8vEAikZ8fr6urSd77znXyvCgAALJX3d1B++tOfqqenR+FwWM8//7weffRR/eAHP9Cjjz76oV9z3bp1isVi6cfw8HAeNwZgk76+PrW2tqqvr8/0KgAMyvs7KN/85je1du3a9GdJzjvvPO3fv19dXV1asWKFKisrJUnRaFRVVVXpvxeNRnXhhRdmfc2SkhKVlJTke1UAlkkkEuru7tahQ4fU3d2thQsXyuv1ml4LgAF5fwflrbfeUlFR5st6PB6lUilJUl1dnSorK9Xb25uex+NxDQwMqKmpKd/rAJhCenp6NDY2JkkaGxtTOBw2vBEAU/L+DsrVV1+tO+64Q8FgUJ/61Kf05z//Wd3d3frqV78qSXIcR2vWrNHtt9+uj3/846qrq9P69etVXV2tJUuW5HsdAFPEyMiIwuFw+ppJrusqHA7r8ssvV01NjeHtAEy2vAfKPffco/Xr1+vrX/+6Dh48qOrqan3ta1/Thg0b0s+55ZZbdPToUa1cuVKHDx/WpZdeqh07dvBWLjBNua6rzZs3n/B806ZNchzHwGYATMn7dVAmA9dBAQrL/v37tWLFihPOH330Uc2dO3cSNwIwEYxeBwUATlUwGFR9fb08Hk/GucfjUUNDg4LBoKHNAJhCoAAwznEctbe3n/CcX+8A0w+BAsAKNTU1CoVC6RhxHEehUEhz5swxvBkAEwgUANZoa2tTeXm5JKmiokKhUMjwRgBMIVAAWMPr9aqzs1OBQEAdHR18sw+YxvL+NWMAyEVzc7Oam5tNrwHAMN5BAQAA1iFQAACAdQgUAABgHQIFAABYh0ABAADWIVAAAIB1CBQAAGAdAgUAAFiHQAEAANYhUABYpa+vT62trerr6zO9CgCDCBQA1kgkEuru7lY0GlV3d7cSiYTplQAYQqAAsEZPT4/GxsYkSWNjYwqHw4Y3AmAKgQLACiMjIwqHw3JdV5Lkuq7C4bBGRkYMbwbABAIFgHGu62rz5s0nPD8WLQCmDwIFgHGRSESDg4NKJpMZ58lkUoODg4pEIoY2A2AKgQLAuGAwqPr6enk8noxzj8ejhoYGBYNBQ5sBMIVAAWCc4zhqb28/4bnjOAa2AmASgQLACjU1NQqFQukYcRxHoVBIc+bMMbwZABMIFADWaGtrU3l5uSSpoqJCoVDI8EYATCFQAFjD6/Wqs7NTgUBAHR0d8nq9plcCYEix6QUA4N2am5vV3Nxseg0AhvEOCgAAsA6BAgAArEOgAAAA6xAoAADAOgQKAACwDoECAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKxDoACwSl9fn1pbW9XX12d6FQAGESgArJFIJNTd3a1oNKru7m4lEgnTKwEwhEABYI2enh6NjY1JksbGxhQOhw1vBMAUAgWAFUZGRhQOh+W6riTJdV2Fw2GNjIwY3gyACQQKAONc19XmzZtPeH4sWgBMHwQKAOMikYgGBweVTCYzzpPJpAYHBxWJRAxtBsAUAgWAccFgUPX19fJ4PBnnHo9HDQ0NCgaDhjYDYAqBAsA4x3HU3t5+wnPHcQxsBcAkAgWAFWpqahQKhdIx4jiOQqGQ5syZY3gzACYQKACs0dbWpvLycklSRUWFQqGQ4Y0AmEKgALCG1+tVZ2enAoGAOjo65PV6Ta8EwJBi0wsAwLs1NzerubnZ9BoADOMdFAAAYB0CBQAAWIdAAWAV7mYMQCJQAFiEuxkDOIZAAWAN7mYM4BgCBYAVuJsxgHcjUAAYx92MARxvQgLl9ddf15e//GWVl5ertLRU5513nnbv3p2eu66rDRs2qKqqSqWlpWppadFrr702EasAmAK4mzGA4+U9UP7zn//okksu0WmnnaZnnnlGr7zyiv7v//5PH/nIR9LP2bRpk+6++249+OCDGhgY0MyZM7V48WI+EAdMU9zNGMDxHDfP752uXbtWzz77rP74xz9mnbuuq+rqat100026+eabJUmxWEyBQECPPPKIli1b9r7/jHg8Lr/fr1gsJp/Pl8/1ARgyMjKi5cuXK5VKpc88Ho8ee+wxbhgIFIhT+fmd93dQtm/frkWLFulLX/qSZs+erQULFmjLli3p+b59+zQ6OqqWlpb0md/vV2Njo/r7+7O+5vj4uOLxeMYDQGGpqanR/PnzM87mz59PnADTVN4D5R//+IceeOABffzjH9evf/1r3XDDDfrGN76hRx99VJI0OjoqSQoEAhl/LxAIpGfH6+rqkt/vTz9qa2vzvTYAw0ZGRvTKK69knL388st8iweYpvIeKKlUSgsXLtSdd96pBQsWaOXKlbr++uv14IMPfujXXLdunWKxWPoxPDycx40BmOa6rjZu3Pieb+uc6BxA4ct7oFRVVemTn/xkxtn8+fPTn8KvrKyUJEWj0YznRKPR9Ox4JSUl8vl8GQ8AhWP//v0aGhrKOhsaGtL+/fsneSMApuU9UC655BK9+uqrGWd79+7V3LlzJUl1dXWqrKxUb29veh6PxzUwMKCmpqZ8rwMAAKagvAdKR0eHnnvuOd155536+9//rnA4rIceekirVq2SJDmOozVr1uj222/X9u3bNTQ0pOXLl6u6ulpLlizJ9zoApoC5c+fqvPPOyzo7//zz0/8DB8D0kfevGUvS008/rXXr1um1115TXV2dOjs7df3116fnruvq1ltv1UMPPaTDhw/r0ksv1f3336+zzz77A70+XzMGCs/IyIi+8pWvZHzepKioSD/+8Y/5Jg9QIE7l5/eEBMpEI1CAwvSjH/1Ijz/+ePrPoVBIK1euNLgRgHwyeh0UAPiwVqxYkf6Pls/n0/Llyw1vBMAUAgWANbxer9auXatAIKC1a9fK6/WaXgmAIQQKAACwDoECwBqJRELd3d2KRqPq7u7mBqLANEagALBGT0+PxsbGJEljY2MKh8OGNwJgCoECwAojIyMKh8Pprxm7rqtwOMy9eIBpikABYJzrutq8efMJz6fg1RAA5IhAAWBcJBLR4OCgkslkxnkymdTg4GD6Xl4Apg8CBYBxwWBQ9fX18ng8Gecej0cNDQ0KBoOGNgNgCoECwDjHcdTe3n7Cc8dxDGwFwCQCBYAVampqFAqF0jHiOI5CoRD34QGmKQIFgDXa2tpUXl4uSaqoqFAoFDK8EQBTCBQA1vB6vers7FQgEFBHRweXugemsWLTCwDAuzU3N6u5udn0GgAM4x0UAABgHQIFAABYh0ABAADWIVAAAIB1CBQAAGAdAgUAAFiHQAFgla1bt+qyyy7T1q1bTa8CwCACBYA1Dh8+rJ6eHqVSKfX09Ojw4cOmVwJgCIECwBrr169XKpWSJKVSKW3YsMHwRgBMIVAAWGH37t0aGhrKOHvxxRe1e/duQxsBMIlAAWBcKpXSbbfdlnV22223pd9VATB9ECgAjBsYGFA8Hs86i8fjGhgYmOSNAJhGoAAwrrGxUbNmzco6mzVrlhobGyd5IwCmESgAjHMcR9XV1Vln1dXVchxnkjcCYBqBAsC4SCSivXv3Zp3t3btXkUhkkjcCYBqBAsC4YDCo+vr697xT4jiOGhoaFAwGDW0GwBQCBYBxjuOovb1dRUWZ/0nyeDxqb2/nVzzANESgALBCTU2NQqFQOkYcx1EoFNKcOXMMbwbABAIFgDXa2tpUXl4uSaqoqFAoFDK8EQBTCBQA1vB6vers7FQgEFBHR4e8Xq/plQAYUmx6AQB4t+bmZjU3N5teA4BhvIMCAACsQ6AAAADrECgArNLX16fW1lb19fWZXgWAQQQKAGskEgl1d3crGo2qu7tbiUTC9EoADCFQAFijp6dHY2NjkqSxsTGFw2HDGwEwhUABYIWRkRGFw2G5ritJcl1X4XBYIyMjhjcDYAKBAsA413W1efPmE54fixYA0weBAsC4SCSiwcFBJZPJjPNkMqnBwUHuZgxMQwQKAOOO3c3Y4/FknHs8Hu5mDExTBAoA447dzfhE59zNGJh+CBQAVuBuxgDejUABYA3uZgzgGAIFgDW4mzGAYwgUAABgHQIFgDW41D2AYwgUANbgUvcAjiFQAFiBS90DeDcCBYBxXOoewPEIFADGcal7AMcjUAAYx6XuARyPQAFgHJe6B3C8CQ+U733ve3IcR2vWrEmfJRIJrVq1SuXl5Zo1a5aWLl2qaDQ60asAsBiXugfwbhMaKIODg/rRj36k888/P+O8o6NDTz31lJ588knt3LlTBw4c0DXXXDORqwCYArjUPYBjJixQ3nzzTbW1tWnLli36yEc+kj6PxWLaunWruru7ddlll+miiy7Sww8/rL6+Pj333HMTtQ6AKYBL3QM4ZsICZdWqVbrqqqvU0tKScb5nzx698847GefnnHOOgsGg+vv7s77W+Pi44vF4xgNAYWpubta2bdvU3NxsehUABk1IoDzxxBN6/vnn1dXV9Z7Z6OioZsyYoTPOOCPjPBAIaHR0NOvrdXV1ye/3px+1tbUTsTYAC/T19am1tVV9fX2mVwFgUN4DZXh4WO3t7erp6cnb27Pr1q1TLBZLP4aHh/PyugDswr14AByT90DZs2ePDh48qIULF6q4uFjFxcXauXOn7r77bhUXFysQCOjtt9/W4cOHM/5eNBpVZWVl1tcsKSmRz+fLeAAoPD09PTp06JAk6dChQ9yLB5jG8h4on/3sZzU0NKQXXngh/Vi0aJHa2trS//dpp52m3t7e9N959dVXFYlE1NTUlO91AEwRIyMj6unpyTjr6enhXjzANFWc7xcsKyvTueeem3E2c+ZMlZeXp8+vu+46dXZ26swzz5TP59Pq1avV1NSkiy++ON/rAJgCTnTPnVQqpc2bN2vTpk1crA2YZvIeKB/EXXfdpaKiIi1dulTj4+NavHix7r//fhOrALDAsXvxHM913fS9eObOnWtgMwCmOO4UvE1oPB6X3+9XLBbj8yhAAUilUlqyZEnWSwj4fD794he/UFERd+YAprpT+fnN/8cDMG54ePiE1zeKx+N8cw+YhggUAMbV1tbq9NNPzzo7/fTTufYRMA0RKACM279/v956662ss7feekv79++f5I0AmEagADDuX//6V05zAIWHQAFg3MUXX3zSX/FwCQJg+iFQABjnOI5qamqyzmpqargGCjANESgAjItEItq7d2/W2d69exWJRCZ5IwCmESgAjAsGg6qvr3/POyVFRUVqaGhQMBg0tBkAUwgUAMY5jqP29vb3XIytqKhI7e3t/IoHmIYIFABWqKmp0TXXXJNxds0112jOnDmGNgJgEoECwBqvvPLKSf8MYPogUABYYffu3Xr55Zczzl566SXt3r3b0EYATCJQABiXSqV02223ZZ3ddtttSqVSk7wRANMIFADGDQwMnPRmgQMDA5O8EQDTCBQAxjU0NMjj8WSdeTweNTQ0TPJGAEwjUAAYNzIyomQymXWWTCY1MjIyyRsBMI1AAWDcsQu1ZcOF2oDpiUABYNyxC7Vlw4XagOmJQAFgNdd1Ta8AwAACBYBxrutq48aNWWcbN24kUoBpiEABYNz+/fs1NDSUdTY0NKT9+/dP8kYATCNQAACAdQgUAMbNnTtXZ599dtbZJz7xCc2dO3eSNwJgGoECwAolJSVZz2fMmDHJmwCwAYECwLhIJHLSz6BEIpFJ3giAaQQKAONqa2vl9Xqzzrxer2prayd5IwCmESgAjPvnP/+pRCKRdZZIJPTPf/5zchcCYByBAsC4F198Mac5gMJDoAAw7qqrrsppDqDwECgAjBscHMxpDqDwECgAjKuqqsppDqDwECgAjJs3b57mzZuXdVZXV3fCGYDCRaAAsEJZWVnW81mzZk3yJgBsQKAAMI4LtQE4HoECwLhgMKj6+vqss4aGBgWDwUneCIBpBAoA4xzH0cKFC7POFixYIMdxJnkjAKYRKACMSyaT2rJlS9bZli1blEwmJ3kjAKYRKACM2759u1KpVNZZKpXS9u3bJ3kjAKYRKACMO+uss3KaAyg8BAoA4xobG3OaAyg8BAoA4371q1/lNAdQeAgUAMZdeeWVOc0BFB4CBYBxu3fvzmkOoPAQKACMO9FF2j7oHEDhIVAAGLdr166c5gAKD4ECwLiqqqqc5gAKD4ECwLh58+aprq4u6+yjH/2o5s2bN7kLATCOQAFghVmzZmU9nzlz5iRvAsAGBAoA4yKRiIaGhrLOhoaGFIlEJnkjAKYRKACMq6mpkcfjyTrzeDyqqamZ5I0AmEagADBu165dJ7xjcTKZ5Fs8wDREoAAwbtGiRTnNARQeAgWAcdyLB8DxCBQAxl1xxRU5zQEUHgIFgHHPPPNMTnMAhYdAAWDcVVddldMcQOHJe6B0dXWpvr5eZWVlmj17tpYsWaJXX3014zmJREKrVq1SeXm5Zs2apaVLlyoajeZ7FQBTxOuvv57THEDhyXug7Ny5U6tWrdJzzz2n3/zmN3rnnXd0+eWX6+jRo+nndHR06KmnntKTTz6pnTt36sCBA7rmmmvyvQqAKYJ78QA4nuO6rjuR/4A33nhDs2fP1s6dO/XpT39asVhMZ511lsLhsL74xS9Kkv72t79p/vz56u/v18UXX/y+rxmPx+X3+xWLxeTz+SZyfQCToLu7W9u3bz/h/Atf+II6OzsncSMAE+FUfn5P+GdQYrGYJOnMM8+UJO3Zs0fvvPOOWlpa0s8555xzFAwG1d/fn/U1xsfHFY/HMx4ACscNN9yQ0xxA4ZnQQEmlUlqzZo0uueQSnXvuuZKk0dFRzZgxQ2eccUbGcwOBgEZHR7O+TldXl/x+f/pRW1s7kWsDmGSPP/54TnMAhWdCA2XVqlV66aWX9MQTT+T0OuvWrVMsFks/hoeH87QhABuEQqGc5gAKz4QFyo033qinn35av/vd7zJu9FVZWam3335bhw8fznh+NBpVZWVl1tcqKSmRz+fLeAAoHOFwOKc5gMKT90BxXVc33nijfv7zn+u3v/2t6urqMuYXXXSRTjvtNPX29qbPXn31VUUiETU1NeV7HQBTwPLly3OaAyg8xfl+wVWrVikcDuuXv/ylysrK0p8r8fv9Ki0tld/v13XXXafOzk6deeaZ8vl8Wr16tZqamj7QN3gAFJ73+zLhBH/ZEICF8v4OygMPPKBYLKbPfOYzqqqqSj+2bduWfs5dd92lz3/+81q6dKk+/elPq7KyUj/72c/yvQqAKeKee+7JaQ6g8Ez4dVAmAtdBAQrLkSNHdPXVV59w/tRTT6msrGwSNwIwEay6DgoAvJ9vfetbOc0BFB4CBYBx3//+93OaAyg8BAoA41KpVE5zAIWHQAFgHJe6B3A8AgWAcV1dXTnNARQeAgWAcdddd11OcwCFh0ABYBw3CwRwPAIFgHHFxSe/qPX7zQEUHgIFgHHXXnttTnMAhYdAAWDcww8/nNMcQOEhUAAYx80CARyPQAFg3PLly3OaAyg8BAoA4x577LGc5gAKD4ECwDh+xQPgeAQKAOO+/OUv5zQHUHgIFADG/eQnP8lpDqDwECgAjPP5fDnNARQeAgWAcaOjoznNARQeAgWAccuWLctpDqDwECgAjHviiSdymgMoPAQKAOMqKytzmgMoPAQKAOMOHTqU0xxA4SFQABjX2tqa0xxA4SFQABi3bdu2nOYACg+BAsC4ioqKnOYACg+BAsC4gwcP5jQHUHgIFADG8RkUAMcjUAAYx2dQAByPQAFg3OzZs3OaAyg8BAoA444cOZLTHEDhIVAAGLd8+fKc5gAKD4ECwLjHHnsspzmAwkOgADCurKzshPfbqaqqUllZ2SRvBMA0AgWAFU50x+LHH398kjcBYAMCBYAVrr322lM6B1DYCBQAxh09elT79u3LOtu3b5+OHj06yRsBMI1AAWDc9ddfn9McQOEhUAAYt2XLlpzmAAoPgQLAuJkzZ6quri7r7GMf+5hmzpw5yRsBMI1AAWCFhx9+OOv51q1bJ3kTADYgUAAAgHUIFABW+Pa3v31K5wAKG4ECwLjx8XH9/ve/zzr7/e9/r/Hx8cldCIBxBAoA49avX5/THEDhIVAAGPfd7343pzmAwkOgADCupKREn/nMZ7LOLrvsMpWUlEzuQgCMc1zXdU0vcari8bj8fr9isZh8Pp/pdQDkSbZIOdFnUwBMPafy85t3UABYo7u7+6R/BjB9ECgArLFw4UKVlZVJksrKyrRw4ULDGwEwpdj0AgDwbk899ZTpFQBYgHdQAACAdQgUAABgHQIFAABYh0ABAADWIVAAAIB1CBQAAGAdo4Fy3333ad68efJ6vWpsbNSuXbtMrgMAACxhLFC2bdumzs5O3XrrrXr++ed1wQUXaPHixTp48KCplQAAgCWM3YunsbFR9fX1uvfeeyVJqVRKtbW1Wr16tdauXXvSv1sI9+JxXVeJREKJRML0KtNeKpVSPB43vQZgLZ/Pp6IiPhFgmtfrldfrleM4plf50E7l57eRK8m+/fbb2rNnj9atW5c+KyoqUktLi/r7+9/z/PHxcY2Pj6f/XAg/TBKJhK644grTawAAppBnnnlGpaWlpteYFEaS+NChQ0omkwoEAhnngUBAo6Oj73l+V1eX/H5/+lFbWztZqwIAAAOmxL141q1bp87OzvSf4/H4lI8Ur9erZ555hl/xWIBf8QAnx6947HDsVzzThZFAqaiokMfjUTQazTiPRqOqrKx8z/NLSkpUUlIyWetNCsdxVFpaOm3eqrNdeXm56RUAAO9iJIlnzJihiy66SL29vemzVCql3t5eNTU1mVgJAABYxNiveDo7O7VixQotWrRIDQ0N+uEPf6ijR4/q2muvNbUSAACwhLFAaW1t1RtvvKENGzZodHRUF154oXbs2PGeD84CAIDpx9h1UHJRCNdBAQBgujmVn998LBsAAFiHQAEAANYhUAAAgHUIFAAAYB0CBQAAWIdAAQAA1iFQAACAdQgUAABgHQIFAABYx9il7nNx7OK38Xjc8CYAAOCDOvZz+4NcxH5KBsqRI0ckSbW1tYY3AQAAp+rIkSPy+/0nfc6UvBdPKpXSgQMHVFZWJsdxTK8DII/i8bhqa2s1PDzMvbaAAuO6ro4cOaLq6moVFZ38UyZTMlAAFC5uBgpA4kOyAADAQgQKAACwDoECwColJSW69dZbVVJSYnoVAAbxGRQAAGAd3kEBAADWIVAAAIB1CBQAAGAdAgUAAFiHQAFglfvuu0/z5s2T1+tVY2Ojdu3aZXolAAYQKACssW3bNnV2durWW2/V888/rwsuuECLFy/WwYMHTa8GYJLxNWMA1mhsbFR9fb3uvfdeSf+771Ztba1Wr16ttWvXGt4OwGTiHRQAVnj77be1Z88etbS0pM+KiorU0tKi/v5+g5sBMIFAAWCFQ4cOKZlMKhAIZJwHAgGNjo4a2gqAKQQKAACwDoECwAoVFRXyeDyKRqMZ59FoVJWVlYa2AmAKgQLACjNmzNBFF12k3t7e9FkqlVJvb6+ampoMbgbAhGLTCwDAMZ2dnVqxYoUWLVqkhoYG/fCHP9TRo0d17bXXml4NwCQjUABYo7W1VW+88YY2bNig0dFRXXjhhdqxY8d7PjgLoPBxHRQAAGAdPoMCAACsQ6AAAADrECgAAMA6BAoAALAOgQIAAKxDoAAAAOsQKAAAwDoECgAAsA6BAgAArEOgAAAA6xAoAADAOgQKAACwzv8Df3ruV/NTOSYAAAAASUVORK5CYII="},"metadata":{}}]},{"cell_type":"code","source":"sns.boxplot(df_drop_missing['Award'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:34:59.933471Z","iopub.execute_input":"2024-09-13T06:34:59.933993Z","iopub.status.idle":"2024-09-13T06:35:00.104423Z","shell.execute_reply.started":"2024-09-13T06:34:59.933910Z","shell.execute_reply":"2024-09-13T06:35:00.103159Z"},"trusted":true},"execution_count":220,"outputs":[{"execution_count":220,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"sns.boxplot(df_drop_missing['Hici'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:00.108012Z","iopub.execute_input":"2024-09-13T06:35:00.109034Z","iopub.status.idle":"2024-09-13T06:35:00.278391Z","shell.execute_reply.started":"2024-09-13T06:35:00.108972Z","shell.execute_reply":"2024-09-13T06:35:00.276993Z"},"trusted":true},"execution_count":221,"outputs":[{"execution_count":221,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"sns.boxenplot(df_drop_missing['N&S'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:00.280080Z","iopub.execute_input":"2024-09-13T06:35:00.280781Z","iopub.status.idle":"2024-09-13T06:35:00.507226Z","shell.execute_reply.started":"2024-09-13T06:35:00.280736Z","shell.execute_reply":"2024-09-13T06:35:00.506042Z"},"trusted":true},"execution_count":222,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:1794: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":222,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"sns.boxplot(df_drop_missing['PUB'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:00.509051Z","iopub.execute_input":"2024-09-13T06:35:00.509430Z","iopub.status.idle":"2024-09-13T06:35:00.676288Z","shell.execute_reply.started":"2024-09-13T06:35:00.509389Z","shell.execute_reply":"2024-09-13T06:35:00.675013Z"},"trusted":true},"execution_count":223,"outputs":[{"execution_count":223,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"sns.boxplot(df_drop_missing['PCP'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:00.677832Z","iopub.execute_input":"2024-09-13T06:35:00.678323Z","iopub.status.idle":"2024-09-13T06:35:00.837326Z","shell.execute_reply.started":"2024-09-13T06:35:00.678266Z","shell.execute_reply":"2024-09-13T06:35:00.836128Z"},"trusted":true},"execution_count":224,"outputs":[{"execution_count":224,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# 1. Box Plot (IQR - Interquartile Range Method)\n##### A box plot helps visualize outliers by displaying data in quartiles. Any data points outside 1.5 times the interquartile range (IQR) are considered outliers.","metadata":{}},{"cell_type":"markdown","source":"# Calculate IQR:\n##### A box plot helps visualize outliers by displaying data in quartiles. Any data points outside 1.5 times the interquartile range (IQR) are considered outliers.","metadata":{}},{"cell_type":"code","source":"Q1 = df_drop_missing['Alumni'].quantile(0.25)\nQ3 = df_drop_missing['Alumni'].quantile(0.75)\nIQR = Q3 - Q1\n\nlower_bound = Q1 - 1.5 * IQR\nuper_bound = Q3 + 1.5 * IQR\noutliers = df_drop_missing[(df_drop_missing['Alumni'] < lower_bound) |(df_drop_missing['Alumni'] > uper_bound)]\nprint(outliers)","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:00.839283Z","iopub.execute_input":"2024-09-13T06:35:00.839781Z","iopub.status.idle":"2024-09-13T06:35:00.861617Z","shell.execute_reply.started":"2024-09-13T06:35:00.839723Z","shell.execute_reply":"2024-09-13T06:35:00.860407Z"},"trusted":true},"execution_count":225,"outputs":[{"name":"stdout","text":"         Rank                               University_Name  \\\n0           1                            Harvard University   \n1           2                           Stanford University   \n2           3   Massachusetts Institute of Technology (MIT)   \n3           4                       University of Cambridge   \n4           5            University of California, Berkeley   \n..        ...                                           ...   \n924  901-1000                   The University of Tokushima   \n942  901-1000                        University of Poitiers   \n973  901-1000                        University of Calcutta   \n984  901-1000           University of Kaiserslautern-Landau   \n989  901-1000  Taras Shevchenko National University of Kyiv   \n\n    National/Regional Rank  Alumni  Award   Hici    N&S    PUB   PCP  \n0                        1   100.0   97.1  100.0  100.0  100.0  85.7  \n1                        2    45.3   88.1   73.1   83.9   73.1  59.6  \n2                        3    71.9   82.8   55.2   70.8   59.1  73.6  \n3                        1    78.2   90.8   45.1   59.8   67.2  60.6  \n4                        4    65.3   76.5   46.9   62.8   57.1  55.5  \n..                     ...     ...    ...    ...    ...    ...   ...  \n924                  26-30    12.7    0.0    0.0    6.9   17.8  11.2  \n942                     25    10.4    0.0    0.0    5.4   19.3  11.5  \n973                  12-15    17.2    0.0    0.0    2.0   18.8   9.5  \n984                  49-51    15.6    0.0    0.0    5.8   18.0   9.3  \n989                      1    15.6    0.0    0.0    3.8   19.2   9.5  \n\n[244 rows x 9 columns]\n","output_type":"stream"}]},{"cell_type":"code","source":"sns.boxenplot(df_drop_missing['Alumni'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:00.863158Z","iopub.execute_input":"2024-09-13T06:35:00.863630Z","iopub.status.idle":"2024-09-13T06:35:01.038373Z","shell.execute_reply.started":"2024-09-13T06:35:00.863573Z","shell.execute_reply":"2024-09-13T06:35:01.037116Z"},"trusted":true},"execution_count":226,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:1794: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":226,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# 2. Z-Score Method\n#####  The Z-score indicates how many standard deviations a data point is from the mean. Values greater than 3 or less than -3 are often considered outliers.","metadata":{}},{"cell_type":"code","source":"from scipy import stats\ndf_drop_missing['z_score']= stats.zscore(df_drop_missing['Alumni'])\noutliers = df_drop_missing[(df_drop_missing['z_score'] > 3) | (df_drop_missing['z_score'] < - 3)]\nprint(outliers)","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:01.040067Z","iopub.execute_input":"2024-09-13T06:35:01.041346Z","iopub.status.idle":"2024-09-13T06:35:01.063626Z","shell.execute_reply.started":"2024-09-13T06:35:01.041279Z","shell.execute_reply":"2024-09-13T06:35:01.062222Z"},"trusted":true},"execution_count":227,"outputs":[{"name":"stdout","text":"        Rank                              University_Name  \\\n0          1                           Harvard University   \n1          2                          Stanford University   \n2          3  Massachusetts Institute of Technology (MIT)   \n3          4                      University of Cambridge   \n4          5           University of California, Berkeley   \n5          6                         University of Oxford   \n6          7                         Princeton University   \n7          8           California Institute of Technology   \n8          8                          Columbia University   \n9         10                        University of Chicago   \n10        11                              Yale University   \n11        12                      Paris-Saclay University   \n12        12                           Cornell University   \n27        28                      The University of Tokyo   \n29        30             University of Michigan-Ann Arbor   \n32        33                               PSL University   \n40        41                          Sorbonne University   \n57        58                         University of Geneva   \n121  101-150                      Moscow State University   \n\n    National/Regional Rank  Alumni  Award   Hici    N&S    PUB    PCP  \\\n0                        1   100.0   97.1  100.0  100.0  100.0   85.7   \n1                        2    45.3   88.1   73.1   83.9   73.1   59.6   \n2                        3    71.9   82.8   55.2   70.8   59.1   73.6   \n3                        1    78.2   90.8   45.1   59.8   67.2   60.6   \n4                        4    65.3   76.5   46.9   62.8   57.1   55.5   \n5                        2    49.5   59.7   51.3   57.2   77.1   47.9   \n6                        5    61.2  100.0   26.0   51.3   42.3   75.3   \n7                      6-7    55.7   63.4   29.8   57.9   41.0  100.0   \n8                      6-7    59.4   63.2   42.7   51.9   67.0   31.6   \n9                        8    59.0   84.5   32.5   44.9   53.0   44.2   \n10                       9    50.3   49.6   45.1   54.3   65.2   38.6   \n11                       1    36.9   73.8   33.8   33.9   65.7   47.1   \n12                      10    42.2   44.2   41.7   55.8   63.9   45.0   \n27                       1    36.3   23.5   21.6   45.3   68.6   24.0   \n29                      19    37.1    9.8   33.2   39.1   74.0   23.3   \n32                       2    50.3   45.1    9.2   23.7   52.6   50.0   \n40                       3    38.6   23.4   20.6   29.2   61.4   27.4   \n57                       3    37.4   37.3   13.0   25.7   43.2   37.9   \n121                      1    37.8   29.1    0.0   11.8   49.5   27.3   \n\n      z_score  \n0    9.456229  \n1    4.039394  \n2    6.673541  \n3    7.297417  \n4    6.019955  \n5    4.455312  \n6    5.613940  \n7    5.069286  \n8    5.435690  \n9    5.396079  \n10   4.534535  \n11   3.207559  \n12   3.732407  \n27   3.148142  \n29   3.227364  \n32   4.534535  \n40   3.375906  \n57   3.257073  \n121  3.296684  \n","output_type":"stream"}]},{"cell_type":"code","source":"sns.boxenplot(df_drop_missing['Alumni'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:01.065652Z","iopub.execute_input":"2024-09-13T06:35:01.066204Z","iopub.status.idle":"2024-09-13T06:35:01.302128Z","shell.execute_reply.started":"2024-09-13T06:35:01.066142Z","shell.execute_reply":"2024-09-13T06:35:01.300984Z"},"trusted":true},"execution_count":228,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:1794: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":228,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# 3. Scatter Plot\n##### For multivariate data, a scatter plot can help visualize outliers.","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplt.scatter(df_drop_missing['Alumni'],df_drop_missing['Award'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:01.305490Z","iopub.execute_input":"2024-09-13T06:35:01.305901Z","iopub.status.idle":"2024-09-13T06:35:01.591031Z","shell.execute_reply.started":"2024-09-13T06:35:01.305856Z","shell.execute_reply":"2024-09-13T06:35:01.589787Z"},"trusted":true},"execution_count":229,"outputs":[{"execution_count":229,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x78d1f9d3e500>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# 4. Isolation Forest (Machine Learning Approach)\n##### The Isolation Forest algorithm can be used to detect anomalies in your dataset.","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import IsolationForest\n\n# Initialize and fit IsolationForest model\nisolation_forest = IsolationForest(contamination=0.05)\n\n# Apply the model to the 'Alumni' column\ndf_drop_missing['Alumni_outlier'] = isolation_forest.fit_predict(df_drop_missing[['Alumni']])\n\n# Filter out outliers (where the prediction is -1)\noutliers = df_drop_missing[df_drop_missing['Alumni_outlier'] == -1]\n\n# Display the detected outliers\nprint(outliers)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:35:01.593053Z","iopub.execute_input":"2024-09-13T06:35:01.593570Z","iopub.status.idle":"2024-09-13T06:35:02.001519Z","shell.execute_reply.started":"2024-09-13T06:35:01.593524Z","shell.execute_reply":"2024-09-13T06:35:02.000479Z"},"trusted":true},"execution_count":230,"outputs":[{"name":"stdout","text":"         Rank                               University_Name  \\\n0           1                            Harvard University   \n1           2                           Stanford University   \n2           3   Massachusetts Institute of Technology (MIT)   \n3           4                       University of Cambridge   \n4           5            University of California, Berkeley   \n5           6                          University of Oxford   \n6           7                          Princeton University   \n7           8            California Institute of Technology   \n8           8                           Columbia University   \n9          10                         University of Chicago   \n10         11                               Yale University   \n11         12                       Paris-Saclay University   \n12         12                            Cornell University   \n13         14                    University of Pennsylvania   \n14         15         University of California, Los Angeles   \n15         16                     University College London   \n16         17                      Johns Hopkins University   \n20         21                                    ETH Zurich   \n27         28                       The University of Tokyo   \n29         30              University of Michigan-Ann Arbor   \n30         31                           New York University   \n32         33                                PSL University   \n35         36             University of Wisconsin - Madison   \n40         41                           Sorbonne University   \n45         45                              Kyoto University   \n46         47          University of Minnesota, Twin Cities   \n47         47                Technical University of Munich   \n57         58                          University of Geneva   \n60         61                            University of Bonn   \n74         74                             McGill University   \n80         81            The Hebrew University of Jerusalem   \n96         97                         University of Bristol   \n117   101-150                             Nagoya University   \n121   101-150                       Moscow State University   \n124   101-150                    Carnegie Mellon University   \n145   101-150                      University of Strasbourg   \n158   151-200                      University of Goettingen   \n163   151-200                       University of Rochester   \n167   151-200               Case Western Reserve University   \n173   151-200                   Goethe University Frankfurt   \n183   151-200  London School of Hygiene & Tropical Medicine   \n275   201-300               Polytechnic University of Milan   \n373   301-400                           University of Liege   \n445   401-500             Saint Petersburg State University   \n461   401-500                           University of Chile   \n494   401-500                          University of Oregon   \n592   501-600                  The City College of New York   \n837   801-900          Czech Technical University in Prague   \n908  901-1000                               Amherst College   \n\n    National/Regional Rank  Alumni  Award   Hici    N&S    PUB    PCP  \\\n0                        1   100.0   97.1  100.0  100.0  100.0   85.7   \n1                        2    45.3   88.1   73.1   83.9   73.1   59.6   \n2                        3    71.9   82.8   55.2   70.8   59.1   73.6   \n3                        1    78.2   90.8   45.1   59.8   67.2   60.6   \n4                        4    65.3   76.5   46.9   62.8   57.1   55.5   \n5                        2    49.5   59.7   51.3   57.2   77.1   47.9   \n6                        5    61.2  100.0   26.0   51.3   42.3   75.3   \n7                      6-7    55.7   63.4   29.8   57.9   41.0  100.0   \n8                      6-7    59.4   63.2   42.7   51.9   67.0   31.6   \n9                        8    59.0   84.5   32.5   44.9   53.0   44.2   \n10                       9    50.3   49.6   45.1   54.3   65.2   38.6   \n11                       1    36.9   73.8   33.8   33.9   65.7   47.1   \n12                      10    42.2   44.2   41.7   55.8   63.9   45.0   \n13                      11    32.0   39.6   51.7   44.5   68.5   42.6   \n14                      12    29.8   45.0   44.6   51.0   67.2   29.1   \n15                       3    27.0   31.5   48.7   41.7   78.5   34.1   \n16                      13    34.0   34.6   45.6   38.7   74.6   29.3   \n20                       1    26.5   42.2   30.5   53.3   54.6   48.8   \n27                       1    36.3   23.5   21.6   45.3   68.6   24.0   \n29                      19    37.1    9.8   33.2   39.1   74.0   23.3   \n30                      20    26.5   35.1   29.8   40.1   56.5   19.9   \n32                       2    50.3   45.1    9.2   23.7   52.6   50.0   \n35                      23    28.0   31.3   27.6   31.7   59.9   24.0   \n40                       3    38.6   23.4   20.6   29.2   61.4   27.4   \n45                       2    33.6   38.8   17.2   25.7   55.2   21.7   \n46                      26    26.0   15.0   36.2   26.9   60.5   22.7   \n47                       2    34.0   17.2   22.5   26.9   55.3   47.9   \n57                       3    37.4   37.3   13.0   25.7   43.2   37.9   \n60                       4    30.3   33.0   18.4   20.7   41.8   42.6   \n74                       3    29.4    0.0   26.0   30.4   58.7   27.3   \n80                       2    29.8   26.1   13.0   22.7   43.2   30.7   \n96                       8     5.2   13.0   28.4   26.3   46.0   27.4   \n117                      3    27.0   23.5   13.0   18.1   43.7   19.8   \n121                      1    37.8   29.1    0.0   11.8   49.5   27.3   \n124                  39-50    28.9   27.6    9.2   22.6   31.5   27.8   \n145                    5-7    26.0   30.2    6.5   18.9   35.4   22.8   \n158                   6-11    29.4    0.0   13.0   25.2   34.9   35.5   \n163                  51-59    30.7    5.3    9.2   20.8   37.5   16.7   \n167                  51-59    29.8    9.2   20.6   13.0   38.0   26.9   \n173                   6-11    31.6    0.0   14.6   19.1   38.8   34.0   \n183                  13-20     5.2    0.0   28.4   14.7   35.1   36.8   \n275                    4-8     5.2   13.0    6.5    9.9   39.0   20.6   \n373                    5-7     5.2    0.0    9.2   13.0   31.2   25.6   \n445                      2    26.0    0.0    0.0    8.0   32.9   16.3   \n461                      1     5.2    0.0    6.5    9.0   33.3   15.0   \n494                 99-114     5.2    0.0    6.5   13.9   26.9   18.6   \n592                115-142    27.0    0.0    6.5    6.7   16.5   20.3   \n837                    5-6     5.2    0.0    0.0    3.6   25.0   14.9   \n908                177-183    24.4    0.0    0.0    4.6    9.3   19.1   \n\n      z_score  Alumni_outlier  \n0    9.456229              -1  \n1    4.039394              -1  \n2    6.673541              -1  \n3    7.297417              -1  \n4    6.019955              -1  \n5    4.455312              -1  \n6    5.613940              -1  \n7    5.069286              -1  \n8    5.435690              -1  \n9    5.396079              -1  \n10   4.534535              -1  \n11   3.207559              -1  \n12   3.732407              -1  \n13   2.722321              -1  \n14   2.504459              -1  \n15   2.227181              -1  \n16   2.920377              -1  \n20   2.177667              -1  \n27   3.148142              -1  \n29   3.227364              -1  \n30   2.177667              -1  \n32   4.534535              -1  \n35   2.326209              -1  \n40   3.375906              -1  \n45   2.880766              -1  \n46   2.128153              -1  \n47   2.920377              -1  \n57   3.257073              -1  \n60   2.553973              -1  \n74   2.464848              -1  \n80   2.504459              -1  \n96   0.068369              -1  \n117  2.227181              -1  \n121  3.296684              -1  \n124  2.415334              -1  \n145  2.128153              -1  \n158  2.464848              -1  \n163  2.593585              -1  \n167  2.504459              -1  \n173  2.682710              -1  \n183  0.068369              -1  \n275  0.068369              -1  \n373  0.068369              -1  \n445  2.128153              -1  \n461  0.068369              -1  \n494  0.068369              -1  \n592  2.227181              -1  \n837  0.068369              -1  \n908  1.969708              -1  \n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"sns.boxenplot(df_drop_missing['Alumni_outlier'])","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:36:21.703572Z","iopub.execute_input":"2024-09-13T06:36:21.704097Z","iopub.status.idle":"2024-09-13T06:36:21.962257Z","shell.execute_reply.started":"2024-09-13T06:36:21.704047Z","shell.execute_reply":"2024-09-13T06:36:21.960939Z"},"trusted":true},"execution_count":231,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:1794: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":231,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# 5. DBSCAN (Density-Based Spatial Clustering)\n###### Another machine learning technique, DBSCAN, detects outliers by identifying sparse clusters of data.","metadata":{}},{"cell_type":"code","source":"from sklearn.cluster import DBSCAN\n\ndb = DBSCAN(eps=0.5, min_samples =5).fit(df_drop_missing[['Alumni']])\ndf_drop_missing['dbscan_label'] = db.labels_\noutliers = df_drop_missing[df_drop_missing['dbscan_label'] == -1]\nprint(outliers)","metadata":{"execution":{"iopub.status.busy":"2024-09-13T06:42:40.522246Z","iopub.execute_input":"2024-09-13T06:42:40.522681Z","iopub.status.idle":"2024-09-13T06:42:40.571306Z","shell.execute_reply.started":"2024-09-13T06:42:40.522636Z","shell.execute_reply":"2024-09-13T06:42:40.570023Z"},"trusted":true},"execution_count":234,"outputs":[{"name":"stdout","text":"        Rank                                   University_Name  \\\n0          1                                Harvard University   \n1          2                               Stanford University   \n2          3       Massachusetts Institute of Technology (MIT)   \n3          4                           University of Cambridge   \n4          5                University of California, Berkeley   \n5          6                              University of Oxford   \n6          7                              Princeton University   \n7          8                California Institute of Technology   \n8          8                               Columbia University   \n9         10                             University of Chicago   \n10        11                                   Yale University   \n11        12                           Paris-Saclay University   \n12        12                                Cornell University   \n13        14                        University of Pennsylvania   \n16        17                          Johns Hopkins University   \n17        18                          University of Washington   \n27        28                           The University of Tokyo   \n29        30                  University of Michigan-Ann Arbor   \n32        33                                    PSL University   \n35        36                 University of Wisconsin - Madison   \n38        39                                   Duke University   \n40        41                               Sorbonne University   \n42        43                              Karolinska Institute   \n44        45                 The University of Texas at Austin   \n45        45                                  Kyoto University   \n47        47                    Technical University of Munich   \n52        53                             King's College London   \n57        58                              University of Geneva   \n84        85           Technion-Israel Institute of Technology   \n87        88                                Uppsala University   \n95        95                               University of Basel   \n116  101-150                                  Brown University   \n121  101-150                           Moscow State University   \n134  101-150               The University of Western Australia   \n173  151-200                       Goethe University Frankfurt   \n187  151-200  London School of Economics and Political Science   \n190  151-200                                University of Pisa   \n271  201-300                         University of East Anglia   \n314  301-400                   Institut Polytechnique de Paris   \n315  301-400                   Ecole Normale Superieure - Lyon   \n328  301-400                               Brandeis University   \n380  301-400                                 Dartmouth College   \n524  501-600        Moscow Institute of Physics and Technology   \n\n    National/Regional Rank  Alumni  Award   Hici    N&S    PUB    PCP  \\\n0                        1   100.0   97.1  100.0  100.0  100.0   85.7   \n1                        2    45.3   88.1   73.1   83.9   73.1   59.6   \n2                        3    71.9   82.8   55.2   70.8   59.1   73.6   \n3                        1    78.2   90.8   45.1   59.8   67.2   60.6   \n4                        4    65.3   76.5   46.9   62.8   57.1   55.5   \n5                        2    49.5   59.7   51.3   57.2   77.1   47.9   \n6                        5    61.2  100.0   26.0   51.3   42.3   75.3   \n7                      6-7    55.7   63.4   29.8   57.9   41.0  100.0   \n8                      6-7    59.4   63.2   42.7   51.9   67.0   31.6   \n9                        8    59.0   84.5   32.5   44.9   53.0   44.2   \n10                       9    50.3   49.6   45.1   54.3   65.2   38.6   \n11                       1    36.9   73.8   33.8   33.9   65.7   47.1   \n12                      10    42.2   44.2   41.7   55.8   63.9   45.0   \n13                      11    32.0   39.6   51.7   44.5   68.5   42.6   \n16                      13    34.0   34.6   45.6   38.7   74.6   29.3   \n17                   14-15    22.6   33.2   43.7   52.3   71.4   25.9   \n27                       1    36.3   23.5   21.6   45.3   68.6   24.0   \n29                      19    37.1    9.8   33.2   39.1   74.0   23.3   \n32                       2    50.3   45.1    9.2   23.7   52.6   50.0   \n35                      23    28.0   31.3   27.6   31.7   59.9   24.0   \n38                      24    19.4   17.8   33.2   37.7   60.1   22.1   \n40                       3    38.6   23.4   20.6   29.2   61.4   27.4   \n42                       1    22.6   23.8   22.5   25.1   56.0   53.2   \n44                      25    23.2   21.6   32.5   29.0   55.6   28.6   \n45                       2    33.6   38.8   17.2   25.7   55.2   21.7   \n47                       2    34.0   17.2   22.5   26.9   55.3   47.9   \n52                       7    23.2   16.8   41.2   18.5   57.5   29.4   \n57                       3    37.4   37.3   13.0   25.7   43.2   37.9   \n84                       3    22.0   34.9   13.0   20.7   34.9   39.6   \n87                       2    20.1   20.6   14.6   24.0   49.9   27.1   \n95                       5    21.4   14.1   15.9   29.7   40.1   39.2   \n116                  39-50    23.8   18.2   11.3   19.8   44.8   33.3   \n121                      1    37.8   29.1    0.0   11.8   49.5   27.3   \n134                    6-7    19.4   13.0   24.4   14.3   46.4   33.6   \n173                   6-11    31.6    0.0   14.6   19.1   38.8   34.0   \n187                  13-20    22.0   15.0   11.3   17.1   30.6   29.0   \n190                    2-3    19.4   20.6    6.5    7.9   40.8   23.4   \n271                  21-25    22.0    0.0   15.9   12.5   28.3   24.6   \n314                  12-16    20.1   15.4    0.0    7.3   27.2   26.9   \n315                  12-16    20.1   18.4    0.0    7.4   22.1   31.2   \n328                  79-98    22.6   11.3    0.0   14.4   17.6   26.8   \n380                  79-98    19.4    0.0    9.2   14.3   28.2   23.2   \n524                      3    20.1    0.0    0.0    6.9   26.5   13.1   \n\n      z_score  Alumni_outlier  dbscan_label  \n0    9.456229              -1            -1  \n1    4.039394              -1            -1  \n2    6.673541              -1            -1  \n3    7.297417              -1            -1  \n4    6.019955              -1            -1  \n5    4.455312              -1            -1  \n6    5.613940              -1            -1  \n7    5.069286              -1            -1  \n8    5.435690              -1            -1  \n9    5.396079              -1            -1  \n10   4.534535              -1            -1  \n11   3.207559              -1            -1  \n12   3.732407              -1            -1  \n13   2.722321              -1            -1  \n16   2.920377              -1            -1  \n17   1.791457               1            -1  \n27   3.148142              -1            -1  \n29   3.227364              -1            -1  \n32   4.534535              -1            -1  \n35   2.326209              -1            -1  \n38   1.474567               1            -1  \n40   3.375906              -1            -1  \n42   1.791457               1            -1  \n44   1.850874               1            -1  \n45   2.880766              -1            -1  \n47   2.920377              -1            -1  \n52   1.850874               1            -1  \n57   3.257073              -1            -1  \n84   1.732040               1            -1  \n87   1.543887               1            -1  \n95   1.672624               1            -1  \n116  1.910291               1            -1  \n121  3.296684              -1            -1  \n134  1.474567               1            -1  \n173  2.682710              -1            -1  \n187  1.732040               1            -1  \n190  1.474567               1            -1  \n271  1.732040               1            -1  \n314  1.543887               1            -1  \n315  1.543887               1            -1  \n328  1.791457               1            -1  \n380  1.474567               1            -1  \n524  1.543887               1            -1  \n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}